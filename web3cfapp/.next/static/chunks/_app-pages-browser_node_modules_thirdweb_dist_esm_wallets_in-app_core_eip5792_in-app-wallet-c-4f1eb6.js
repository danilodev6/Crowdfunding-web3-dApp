"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_wallets_in-app_core_eip5792_in-app-wallet-c-4f1eb6"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/send-and-confirm-transaction.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/transaction/actions/send-and-confirm-transaction.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendAndConfirmTransaction: () => (/* binding */ sendAndConfirmTransaction)\n/* harmony export */ });\n/* harmony import */ var _send_transaction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./send-transaction.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/send-transaction.js\");\n/* harmony import */ var _wait_for_tx_receipt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wait-for-tx-receipt.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/wait-for-tx-receipt.js\");\n\n\n/**\n * Sends a transaction using the provided wallet.\n * @param options - The options for sending the transaction.\n * @returns A promise that resolves to the confirmed transaction receipt.\n * @throws An error if the wallet is not connected.\n * @transaction\n * @example\n *\n * ### Basic usage\n * ```ts\n * import { sendAndConfirmTransaction } from \"thirdweb\";\n *\n * const transactionReceipt = await sendAndConfirmTransaction({\n *  account,\n *  transaction\n * });\n * ```\n *\n * ### Gasless usage with [thirdweb Engine](https://portal.thirdweb.com/engine)\n * ```ts\n * const transactionReceipt = await sendAndConfirmTransaction({\n *  account,\n *  transaction,\n *  gasless: {\n *    provider: \"engine\",\n *    relayerUrl: \"https://thirdweb.engine-***.thirdweb.com/relayer/***\",\n *    relayerForwarderAddress: \"0x...\",\n *  }\n * });\n * ```\n *\n * ### Gasless usage with OpenZeppelin\n * ```ts\n * const transactionReceipt = await sendAndConfirmTransaction({\n *  account,\n *  transaction,\n *  gasless: {\n *    provider: \"openzeppelin\",\n *    relayerUrl: \"https://...\",\n *    relayerForwarderAddress: \"0x...\",\n *  }\n * });\n * ```\n */\nasync function sendAndConfirmTransaction(options) {\n    const submittedTx = await (0,_send_transaction_js__WEBPACK_IMPORTED_MODULE_0__.sendTransaction)(options);\n    return (0,_wait_for_tx_receipt_js__WEBPACK_IMPORTED_MODULE_1__.waitForReceipt)(submittedTx);\n}\n//# sourceMappingURL=send-and-confirm-transaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS90cmFuc2FjdGlvbi9hY3Rpb25zL3NlbmQtYW5kLWNvbmZpcm0tdHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlEO0FBQ0M7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDRCQUE0QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDTztBQUNQLDhCQUE4QixxRUFBZTtBQUM3QyxXQUFXLHVFQUFjO0FBQ3pCO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pbG8vRGV2ZWxvcGVyL0VOVi9CbG9ja2NoYWluL3dlYjNwcm9qZWN0cy93ZWIzY2Yvd2ViM2NmYXBwL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS90cmFuc2FjdGlvbi9hY3Rpb25zL3NlbmQtYW5kLWNvbmZpcm0tdHJhbnNhY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2VuZFRyYW5zYWN0aW9uLCB9IGZyb20gXCIuL3NlbmQtdHJhbnNhY3Rpb24uanNcIjtcbmltcG9ydCB7IHdhaXRGb3JSZWNlaXB0IH0gZnJvbSBcIi4vd2FpdC1mb3ItdHgtcmVjZWlwdC5qc1wiO1xuLyoqXG4gKiBTZW5kcyBhIHRyYW5zYWN0aW9uIHVzaW5nIHRoZSBwcm92aWRlZCB3YWxsZXQuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciBzZW5kaW5nIHRoZSB0cmFuc2FjdGlvbi5cbiAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBjb25maXJtZWQgdHJhbnNhY3Rpb24gcmVjZWlwdC5cbiAqIEB0aHJvd3MgQW4gZXJyb3IgaWYgdGhlIHdhbGxldCBpcyBub3QgY29ubmVjdGVkLlxuICogQHRyYW5zYWN0aW9uXG4gKiBAZXhhbXBsZVxuICpcbiAqICMjIyBCYXNpYyB1c2FnZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IHNlbmRBbmRDb25maXJtVHJhbnNhY3Rpb24gfSBmcm9tIFwidGhpcmR3ZWJcIjtcbiAqXG4gKiBjb25zdCB0cmFuc2FjdGlvblJlY2VpcHQgPSBhd2FpdCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uKHtcbiAqICBhY2NvdW50LFxuICogIHRyYW5zYWN0aW9uXG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqICMjIyBHYXNsZXNzIHVzYWdlIHdpdGggW3RoaXJkd2ViIEVuZ2luZV0oaHR0cHM6Ly9wb3J0YWwudGhpcmR3ZWIuY29tL2VuZ2luZSlcbiAqIGBgYHRzXG4gKiBjb25zdCB0cmFuc2FjdGlvblJlY2VpcHQgPSBhd2FpdCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uKHtcbiAqICBhY2NvdW50LFxuICogIHRyYW5zYWN0aW9uLFxuICogIGdhc2xlc3M6IHtcbiAqICAgIHByb3ZpZGVyOiBcImVuZ2luZVwiLFxuICogICAgcmVsYXllclVybDogXCJodHRwczovL3RoaXJkd2ViLmVuZ2luZS0qKioudGhpcmR3ZWIuY29tL3JlbGF5ZXIvKioqXCIsXG4gKiAgICByZWxheWVyRm9yd2FyZGVyQWRkcmVzczogXCIweC4uLlwiLFxuICogIH1cbiAqIH0pO1xuICogYGBgXG4gKlxuICogIyMjIEdhc2xlc3MgdXNhZ2Ugd2l0aCBPcGVuWmVwcGVsaW5cbiAqIGBgYHRzXG4gKiBjb25zdCB0cmFuc2FjdGlvblJlY2VpcHQgPSBhd2FpdCBzZW5kQW5kQ29uZmlybVRyYW5zYWN0aW9uKHtcbiAqICBhY2NvdW50LFxuICogIHRyYW5zYWN0aW9uLFxuICogIGdhc2xlc3M6IHtcbiAqICAgIHByb3ZpZGVyOiBcIm9wZW56ZXBwZWxpblwiLFxuICogICAgcmVsYXllclVybDogXCJodHRwczovLy4uLlwiLFxuICogICAgcmVsYXllckZvcndhcmRlckFkZHJlc3M6IFwiMHguLi5cIixcbiAqICB9XG4gKiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbihvcHRpb25zKSB7XG4gICAgY29uc3Qgc3VibWl0dGVkVHggPSBhd2FpdCBzZW5kVHJhbnNhY3Rpb24ob3B0aW9ucyk7XG4gICAgcmV0dXJuIHdhaXRGb3JSZWNlaXB0KHN1Ym1pdHRlZFR4KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlbmQtYW5kLWNvbmZpcm0tdHJhbnNhY3Rpb24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/send-and-confirm-transaction.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/send-batch-transaction.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/transaction/actions/send-batch-transaction.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendBatchTransaction: () => (/* binding */ sendBatchTransaction)\n/* harmony export */ });\n/* harmony import */ var _utils_promise_resolve_promised_value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/promise/resolve-promised-value.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/promise/resolve-promised-value.js\");\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/encode.js\");\n\n\n/**\n * Sends a batch transaction using the provided options.\n * @param options - The options for sending the batch transaction.\n * @returns A promise that resolves to the options for waiting for the receipt of the first transaction in the batch.\n * @throws An error if the account is not connected, there are no transactions to send, or the account does not implement sendBatchTransaction.\n * @transaction\n * @example\n * ```ts\n * import { sendBatchTransaction } from \"thirdweb\";\n *\n * const waitForReceiptOptions = await sendBatchTransaction({\n *  account,\n *  transactions\n * });\n * ```\n */\nasync function sendBatchTransaction(options) {\n    const { account, transactions } = options;\n    if (!account) {\n        throw new Error(\"not connected\");\n    }\n    if (transactions.length === 0) {\n        throw new Error(\"No transactions to send\");\n    }\n    const firstTx = transactions[0];\n    if (!firstTx) {\n        throw new Error(\"No transactions to send\");\n    }\n    if (account.sendBatchTransaction) {\n        const serializedTxs = await Promise.all(transactions.map(async (tx) => {\n            // no need to estimate gas for these, gas will be estimated on the entire batch\n            const [data, to, accessList, value] = await Promise.all([\n                (0,_encode_js__WEBPACK_IMPORTED_MODULE_0__.encode)(tx),\n                (0,_utils_promise_resolve_promised_value_js__WEBPACK_IMPORTED_MODULE_1__.resolvePromisedValue)(tx.to),\n                (0,_utils_promise_resolve_promised_value_js__WEBPACK_IMPORTED_MODULE_1__.resolvePromisedValue)(tx.accessList),\n                (0,_utils_promise_resolve_promised_value_js__WEBPACK_IMPORTED_MODULE_1__.resolvePromisedValue)(tx.value),\n            ]);\n            const serializedTx = {\n                accessList,\n                chainId: tx.chain.id,\n                data,\n                to,\n                value,\n            };\n            return serializedTx;\n        }));\n        const result = await account.sendBatchTransaction(serializedTxs);\n        return {\n            ...result,\n            chain: firstTx.chain,\n            client: firstTx.client,\n        };\n    }\n    throw new Error(\"Account doesn't implement sendBatchTransaction\");\n}\n//# sourceMappingURL=send-batch-transaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS90cmFuc2FjdGlvbi9hY3Rpb25zL3NlbmQtYmF0Y2gtdHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFGO0FBQ2hEO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVCQUF1QjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ087QUFDUCxZQUFZLHdCQUF3QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGtEQUFNO0FBQ3RCLGdCQUFnQiw4RkFBb0I7QUFDcEMsZ0JBQWdCLDhGQUFvQjtBQUNwQyxnQkFBZ0IsOEZBQW9CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2Rhbmlsby9EZXZlbG9wZXIvRU5WL0Jsb2NrY2hhaW4vd2ViM3Byb2plY3RzL3dlYjNjZi93ZWIzY2ZhcHAvbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL3RyYW5zYWN0aW9uL2FjdGlvbnMvc2VuZC1iYXRjaC10cmFuc2FjdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZXNvbHZlUHJvbWlzZWRWYWx1ZSB9IGZyb20gXCIuLi8uLi91dGlscy9wcm9taXNlL3Jlc29sdmUtcHJvbWlzZWQtdmFsdWUuanNcIjtcbmltcG9ydCB7IGVuY29kZSB9IGZyb20gXCIuL2VuY29kZS5qc1wiO1xuLyoqXG4gKiBTZW5kcyBhIGJhdGNoIHRyYW5zYWN0aW9uIHVzaW5nIHRoZSBwcm92aWRlZCBvcHRpb25zLlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3Igc2VuZGluZyB0aGUgYmF0Y2ggdHJhbnNhY3Rpb24uXG4gKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgb3B0aW9ucyBmb3Igd2FpdGluZyBmb3IgdGhlIHJlY2VpcHQgb2YgdGhlIGZpcnN0IHRyYW5zYWN0aW9uIGluIHRoZSBiYXRjaC5cbiAqIEB0aHJvd3MgQW4gZXJyb3IgaWYgdGhlIGFjY291bnQgaXMgbm90IGNvbm5lY3RlZCwgdGhlcmUgYXJlIG5vIHRyYW5zYWN0aW9ucyB0byBzZW5kLCBvciB0aGUgYWNjb3VudCBkb2VzIG5vdCBpbXBsZW1lbnQgc2VuZEJhdGNoVHJhbnNhY3Rpb24uXG4gKiBAdHJhbnNhY3Rpb25cbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgc2VuZEJhdGNoVHJhbnNhY3Rpb24gfSBmcm9tIFwidGhpcmR3ZWJcIjtcbiAqXG4gKiBjb25zdCB3YWl0Rm9yUmVjZWlwdE9wdGlvbnMgPSBhd2FpdCBzZW5kQmF0Y2hUcmFuc2FjdGlvbih7XG4gKiAgYWNjb3VudCxcbiAqICB0cmFuc2FjdGlvbnNcbiAqIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZW5kQmF0Y2hUcmFuc2FjdGlvbihvcHRpb25zKSB7XG4gICAgY29uc3QgeyBhY2NvdW50LCB0cmFuc2FjdGlvbnMgfSA9IG9wdGlvbnM7XG4gICAgaWYgKCFhY2NvdW50KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIm5vdCBjb25uZWN0ZWRcIik7XG4gICAgfVxuICAgIGlmICh0cmFuc2FjdGlvbnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHRyYW5zYWN0aW9ucyB0byBzZW5kXCIpO1xuICAgIH1cbiAgICBjb25zdCBmaXJzdFR4ID0gdHJhbnNhY3Rpb25zWzBdO1xuICAgIGlmICghZmlyc3RUeCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyB0cmFuc2FjdGlvbnMgdG8gc2VuZFwiKTtcbiAgICB9XG4gICAgaWYgKGFjY291bnQuc2VuZEJhdGNoVHJhbnNhY3Rpb24pIHtcbiAgICAgICAgY29uc3Qgc2VyaWFsaXplZFR4cyA9IGF3YWl0IFByb21pc2UuYWxsKHRyYW5zYWN0aW9ucy5tYXAoYXN5bmMgKHR4KSA9PiB7XG4gICAgICAgICAgICAvLyBubyBuZWVkIHRvIGVzdGltYXRlIGdhcyBmb3IgdGhlc2UsIGdhcyB3aWxsIGJlIGVzdGltYXRlZCBvbiB0aGUgZW50aXJlIGJhdGNoXG4gICAgICAgICAgICBjb25zdCBbZGF0YSwgdG8sIGFjY2Vzc0xpc3QsIHZhbHVlXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgICAgICAgICBlbmNvZGUodHgpLFxuICAgICAgICAgICAgICAgIHJlc29sdmVQcm9taXNlZFZhbHVlKHR4LnRvKSxcbiAgICAgICAgICAgICAgICByZXNvbHZlUHJvbWlzZWRWYWx1ZSh0eC5hY2Nlc3NMaXN0KSxcbiAgICAgICAgICAgICAgICByZXNvbHZlUHJvbWlzZWRWYWx1ZSh0eC52YWx1ZSksXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgICAgIGNvbnN0IHNlcmlhbGl6ZWRUeCA9IHtcbiAgICAgICAgICAgICAgICBhY2Nlc3NMaXN0LFxuICAgICAgICAgICAgICAgIGNoYWluSWQ6IHR4LmNoYWluLmlkLFxuICAgICAgICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgICAgICAgdG8sXG4gICAgICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHNlcmlhbGl6ZWRUeDtcbiAgICAgICAgfSkpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBhY2NvdW50LnNlbmRCYXRjaFRyYW5zYWN0aW9uKHNlcmlhbGl6ZWRUeHMpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4ucmVzdWx0LFxuICAgICAgICAgICAgY2hhaW46IGZpcnN0VHguY2hhaW4sXG4gICAgICAgICAgICBjbGllbnQ6IGZpcnN0VHguY2xpZW50LFxuICAgICAgICB9O1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJBY2NvdW50IGRvZXNuJ3QgaW1wbGVtZW50IHNlbmRCYXRjaFRyYW5zYWN0aW9uXCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VuZC1iYXRjaC10cmFuc2FjdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/send-batch-transaction.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/eip5792/in-app-wallet-calls.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/eip5792/in-app-wallet-calls.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   inAppWalletGetCallsStatus: () => (/* binding */ inAppWalletGetCallsStatus),\n/* harmony export */   inAppWalletSendCalls: () => (/* binding */ inAppWalletSendCalls)\n/* harmony export */ });\n/* harmony import */ var _rpc_actions_eth_getTransactionReceipt_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../rpc/actions/eth_getTransactionReceipt.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_getTransactionReceipt.js\");\n/* harmony import */ var _rpc_rpc_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../rpc/rpc.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/rpc.js\");\n/* harmony import */ var _transaction_actions_send_and_confirm_transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../transaction/actions/send-and-confirm-transaction.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/send-and-confirm-transaction.js\");\n/* harmony import */ var _transaction_actions_send_batch_transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../transaction/actions/send-batch-transaction.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/send-batch-transaction.js\");\n/* harmony import */ var _utils_caching_lru_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/caching/lru.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/caching/lru.js\");\n/* harmony import */ var _utils_random_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/random.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/random.js\");\n\n\n\n\n\n\nconst bundlesToTransactions = new _utils_caching_lru_js__WEBPACK_IMPORTED_MODULE_0__.LruMap(1000);\n/**\n * @internal\n */\nasync function inAppWalletSendCalls(args) {\n    const { account, calls } = args;\n    const hashes = [];\n    const id = (0,_utils_random_js__WEBPACK_IMPORTED_MODULE_1__.randomBytesHex)(65);\n    bundlesToTransactions.set(id, hashes);\n    if (account.sendBatchTransaction) {\n        const receipt = await (0,_transaction_actions_send_batch_transaction_js__WEBPACK_IMPORTED_MODULE_2__.sendBatchTransaction)({\n            account,\n            transactions: calls,\n        });\n        hashes.push(receipt.transactionHash);\n        bundlesToTransactions.set(id, hashes);\n    }\n    else {\n        for (const tx of calls) {\n            const receipt = await (0,_transaction_actions_send_and_confirm_transaction_js__WEBPACK_IMPORTED_MODULE_3__.sendAndConfirmTransaction)({\n                account,\n                transaction: tx,\n            });\n            hashes.push(receipt.transactionHash);\n            bundlesToTransactions.set(id, hashes);\n        }\n    }\n    return id;\n}\n/**\n * @internal\n */\nasync function inAppWalletGetCallsStatus(args) {\n    const { chain, client, id } = args;\n    const bundle = bundlesToTransactions.get(id);\n    if (!bundle) {\n        throw new Error(\"Failed to get calls status, unknown bundle id\");\n    }\n    const request = (0,_rpc_rpc_js__WEBPACK_IMPORTED_MODULE_4__.getRpcClient)({ chain, client });\n    let status = \"success\";\n    const receipts = await Promise.all(bundle.map((hash) => (0,_rpc_actions_eth_getTransactionReceipt_js__WEBPACK_IMPORTED_MODULE_5__.eth_getTransactionReceipt)(request, { hash })\n        .then((receipt) => ({\n        blockHash: receipt.blockHash,\n        blockNumber: receipt.blockNumber,\n        gasUsed: receipt.gasUsed,\n        logs: receipt.logs.map((l) => ({\n            address: l.address,\n            data: l.data,\n            topics: l.topics,\n        })),\n        status: receipt.status,\n        transactionHash: receipt.transactionHash,\n    }))\n        .catch(() => {\n        status = \"pending\";\n        return null; // Return null if there's an error to filter out later\n    })));\n    return {\n        atomic: false,\n        chainId: chain.id,\n        id,\n        receipts: receipts.filter((r) => r !== null),\n        status,\n        statusCode: 200,\n        version: \"2.0.0\",\n    };\n}\n//# sourceMappingURL=in-app-wallet-calls.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2VpcDU3OTIvaW4tYXBwLXdhbGxldC1jYWxscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFpRztBQUMzQztBQUNzRDtBQUNYO0FBQ3ZDO0FBQ0c7QUFDN0Qsa0NBQWtDLHlEQUFNO0FBQ3hDO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxpQkFBaUI7QUFDN0I7QUFDQSxlQUFlLGdFQUFjO0FBQzdCO0FBQ0E7QUFDQSw4QkFBOEIsb0dBQW9CO0FBQ2xEO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQywrR0FBeUI7QUFDM0Q7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHlEQUFZLEdBQUcsZUFBZTtBQUNsRDtBQUNBLDREQUE0RCxvR0FBeUIsWUFBWSxNQUFNO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZGFuaWxvL0RldmVsb3Blci9FTlYvQmxvY2tjaGFpbi93ZWIzcHJvamVjdHMvd2ViM2NmL3dlYjNjZmFwcC9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vd2FsbGV0cy9pbi1hcHAvY29yZS9laXA1NzkyL2luLWFwcC13YWxsZXQtY2FsbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXRoX2dldFRyYW5zYWN0aW9uUmVjZWlwdCB9IGZyb20gXCIuLi8uLi8uLi8uLi9ycGMvYWN0aW9ucy9ldGhfZ2V0VHJhbnNhY3Rpb25SZWNlaXB0LmpzXCI7XG5pbXBvcnQgeyBnZXRScGNDbGllbnQgfSBmcm9tIFwiLi4vLi4vLi4vLi4vcnBjL3JwYy5qc1wiO1xuaW1wb3J0IHsgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbiB9IGZyb20gXCIuLi8uLi8uLi8uLi90cmFuc2FjdGlvbi9hY3Rpb25zL3NlbmQtYW5kLWNvbmZpcm0tdHJhbnNhY3Rpb24uanNcIjtcbmltcG9ydCB7IHNlbmRCYXRjaFRyYW5zYWN0aW9uIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3RyYW5zYWN0aW9uL2FjdGlvbnMvc2VuZC1iYXRjaC10cmFuc2FjdGlvbi5qc1wiO1xuaW1wb3J0IHsgTHJ1TWFwIH0gZnJvbSBcIi4uLy4uLy4uLy4uL3V0aWxzL2NhY2hpbmcvbHJ1LmpzXCI7XG5pbXBvcnQgeyByYW5kb21CeXRlc0hleCB9IGZyb20gXCIuLi8uLi8uLi8uLi91dGlscy9yYW5kb20uanNcIjtcbmNvbnN0IGJ1bmRsZXNUb1RyYW5zYWN0aW9ucyA9IG5ldyBMcnVNYXAoMTAwMCk7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW5BcHBXYWxsZXRTZW5kQ2FsbHMoYXJncykge1xuICAgIGNvbnN0IHsgYWNjb3VudCwgY2FsbHMgfSA9IGFyZ3M7XG4gICAgY29uc3QgaGFzaGVzID0gW107XG4gICAgY29uc3QgaWQgPSByYW5kb21CeXRlc0hleCg2NSk7XG4gICAgYnVuZGxlc1RvVHJhbnNhY3Rpb25zLnNldChpZCwgaGFzaGVzKTtcbiAgICBpZiAoYWNjb3VudC5zZW5kQmF0Y2hUcmFuc2FjdGlvbikge1xuICAgICAgICBjb25zdCByZWNlaXB0ID0gYXdhaXQgc2VuZEJhdGNoVHJhbnNhY3Rpb24oe1xuICAgICAgICAgICAgYWNjb3VudCxcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uczogY2FsbHMsXG4gICAgICAgIH0pO1xuICAgICAgICBoYXNoZXMucHVzaChyZWNlaXB0LnRyYW5zYWN0aW9uSGFzaCk7XG4gICAgICAgIGJ1bmRsZXNUb1RyYW5zYWN0aW9ucy5zZXQoaWQsIGhhc2hlcyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBmb3IgKGNvbnN0IHR4IG9mIGNhbGxzKSB7XG4gICAgICAgICAgICBjb25zdCByZWNlaXB0ID0gYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbih7XG4gICAgICAgICAgICAgICAgYWNjb3VudCxcbiAgICAgICAgICAgICAgICB0cmFuc2FjdGlvbjogdHgsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGhhc2hlcy5wdXNoKHJlY2VpcHQudHJhbnNhY3Rpb25IYXNoKTtcbiAgICAgICAgICAgIGJ1bmRsZXNUb1RyYW5zYWN0aW9ucy5zZXQoaWQsIGhhc2hlcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGlkO1xufVxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGluQXBwV2FsbGV0R2V0Q2FsbHNTdGF0dXMoYXJncykge1xuICAgIGNvbnN0IHsgY2hhaW4sIGNsaWVudCwgaWQgfSA9IGFyZ3M7XG4gICAgY29uc3QgYnVuZGxlID0gYnVuZGxlc1RvVHJhbnNhY3Rpb25zLmdldChpZCk7XG4gICAgaWYgKCFidW5kbGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGdldCBjYWxscyBzdGF0dXMsIHVua25vd24gYnVuZGxlIGlkXCIpO1xuICAgIH1cbiAgICBjb25zdCByZXF1ZXN0ID0gZ2V0UnBjQ2xpZW50KHsgY2hhaW4sIGNsaWVudCB9KTtcbiAgICBsZXQgc3RhdHVzID0gXCJzdWNjZXNzXCI7XG4gICAgY29uc3QgcmVjZWlwdHMgPSBhd2FpdCBQcm9taXNlLmFsbChidW5kbGUubWFwKChoYXNoKSA9PiBldGhfZ2V0VHJhbnNhY3Rpb25SZWNlaXB0KHJlcXVlc3QsIHsgaGFzaCB9KVxuICAgICAgICAudGhlbigocmVjZWlwdCkgPT4gKHtcbiAgICAgICAgYmxvY2tIYXNoOiByZWNlaXB0LmJsb2NrSGFzaCxcbiAgICAgICAgYmxvY2tOdW1iZXI6IHJlY2VpcHQuYmxvY2tOdW1iZXIsXG4gICAgICAgIGdhc1VzZWQ6IHJlY2VpcHQuZ2FzVXNlZCxcbiAgICAgICAgbG9nczogcmVjZWlwdC5sb2dzLm1hcCgobCkgPT4gKHtcbiAgICAgICAgICAgIGFkZHJlc3M6IGwuYWRkcmVzcyxcbiAgICAgICAgICAgIGRhdGE6IGwuZGF0YSxcbiAgICAgICAgICAgIHRvcGljczogbC50b3BpY3MsXG4gICAgICAgIH0pKSxcbiAgICAgICAgc3RhdHVzOiByZWNlaXB0LnN0YXR1cyxcbiAgICAgICAgdHJhbnNhY3Rpb25IYXNoOiByZWNlaXB0LnRyYW5zYWN0aW9uSGFzaCxcbiAgICB9KSlcbiAgICAgICAgLmNhdGNoKCgpID0+IHtcbiAgICAgICAgc3RhdHVzID0gXCJwZW5kaW5nXCI7XG4gICAgICAgIHJldHVybiBudWxsOyAvLyBSZXR1cm4gbnVsbCBpZiB0aGVyZSdzIGFuIGVycm9yIHRvIGZpbHRlciBvdXQgbGF0ZXJcbiAgICB9KSkpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGF0b21pYzogZmFsc2UsXG4gICAgICAgIGNoYWluSWQ6IGNoYWluLmlkLFxuICAgICAgICBpZCxcbiAgICAgICAgcmVjZWlwdHM6IHJlY2VpcHRzLmZpbHRlcigocikgPT4gciAhPT0gbnVsbCksXG4gICAgICAgIHN0YXR1cyxcbiAgICAgICAgc3RhdHVzQ29kZTogMjAwLFxuICAgICAgICB2ZXJzaW9uOiBcIjIuMC4wXCIsXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluLWFwcC13YWxsZXQtY2FsbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/eip5792/in-app-wallet-calls.js\n"));

/***/ })

}]);