"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_transaction_actions_send-batch-transaction_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/send-batch-transaction.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/transaction/actions/send-batch-transaction.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendBatchTransaction: () => (/* binding */ sendBatchTransaction)\n/* harmony export */ });\n/* harmony import */ var _utils_promise_resolve_promised_value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/promise/resolve-promised-value.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/promise/resolve-promised-value.js\");\n/* harmony import */ var _encode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encode.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/encode.js\");\n\n\n/**\n * Sends a batch transaction using the provided options.\n * @param options - The options for sending the batch transaction.\n * @returns A promise that resolves to the options for waiting for the receipt of the first transaction in the batch.\n * @throws An error if the account is not connected, there are no transactions to send, or the account does not implement sendBatchTransaction.\n * @transaction\n * @example\n * ```ts\n * import { sendBatchTransaction } from \"thirdweb\";\n *\n * const waitForReceiptOptions = await sendBatchTransaction({\n *  account,\n *  transactions\n * });\n * ```\n */\nasync function sendBatchTransaction(options) {\n    const { account, transactions } = options;\n    if (!account) {\n        throw new Error(\"not connected\");\n    }\n    if (transactions.length === 0) {\n        throw new Error(\"No transactions to send\");\n    }\n    const firstTx = transactions[0];\n    if (!firstTx) {\n        throw new Error(\"No transactions to send\");\n    }\n    if (account.sendBatchTransaction) {\n        const serializedTxs = await Promise.all(transactions.map(async (tx) => {\n            // no need to estimate gas for these, gas will be estimated on the entire batch\n            const [data, to, accessList, value] = await Promise.all([\n                (0,_encode_js__WEBPACK_IMPORTED_MODULE_0__.encode)(tx),\n                (0,_utils_promise_resolve_promised_value_js__WEBPACK_IMPORTED_MODULE_1__.resolvePromisedValue)(tx.to),\n                (0,_utils_promise_resolve_promised_value_js__WEBPACK_IMPORTED_MODULE_1__.resolvePromisedValue)(tx.accessList),\n                (0,_utils_promise_resolve_promised_value_js__WEBPACK_IMPORTED_MODULE_1__.resolvePromisedValue)(tx.value),\n            ]);\n            const serializedTx = {\n                accessList,\n                chainId: tx.chain.id,\n                data,\n                to,\n                value,\n            };\n            return serializedTx;\n        }));\n        const result = await account.sendBatchTransaction(serializedTxs);\n        return {\n            ...result,\n            chain: firstTx.chain,\n            client: firstTx.client,\n        };\n    }\n    throw new Error(\"Account doesn't implement sendBatchTransaction\");\n}\n//# sourceMappingURL=send-batch-transaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS90cmFuc2FjdGlvbi9hY3Rpb25zL3NlbmQtYmF0Y2gtdHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFGO0FBQ2hEO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVCQUF1QjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ087QUFDUCxZQUFZLHdCQUF3QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGtEQUFNO0FBQ3RCLGdCQUFnQiw4RkFBb0I7QUFDcEMsZ0JBQWdCLDhGQUFvQjtBQUNwQyxnQkFBZ0IsOEZBQW9CO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2Rhbmlsby9EZXZlbG9wZXIvRU5WL0Jsb2NrY2hhaW4vd2ViM3Byb2plY3RzL3dlYjNjZi93ZWIzY2ZhcHAvbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL3RyYW5zYWN0aW9uL2FjdGlvbnMvc2VuZC1iYXRjaC10cmFuc2FjdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZXNvbHZlUHJvbWlzZWRWYWx1ZSB9IGZyb20gXCIuLi8uLi91dGlscy9wcm9taXNlL3Jlc29sdmUtcHJvbWlzZWQtdmFsdWUuanNcIjtcbmltcG9ydCB7IGVuY29kZSB9IGZyb20gXCIuL2VuY29kZS5qc1wiO1xuLyoqXG4gKiBTZW5kcyBhIGJhdGNoIHRyYW5zYWN0aW9uIHVzaW5nIHRoZSBwcm92aWRlZCBvcHRpb25zLlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3Igc2VuZGluZyB0aGUgYmF0Y2ggdHJhbnNhY3Rpb24uXG4gKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgb3B0aW9ucyBmb3Igd2FpdGluZyBmb3IgdGhlIHJlY2VpcHQgb2YgdGhlIGZpcnN0IHRyYW5zYWN0aW9uIGluIHRoZSBiYXRjaC5cbiAqIEB0aHJvd3MgQW4gZXJyb3IgaWYgdGhlIGFjY291bnQgaXMgbm90IGNvbm5lY3RlZCwgdGhlcmUgYXJlIG5vIHRyYW5zYWN0aW9ucyB0byBzZW5kLCBvciB0aGUgYWNjb3VudCBkb2VzIG5vdCBpbXBsZW1lbnQgc2VuZEJhdGNoVHJhbnNhY3Rpb24uXG4gKiBAdHJhbnNhY3Rpb25cbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgc2VuZEJhdGNoVHJhbnNhY3Rpb24gfSBmcm9tIFwidGhpcmR3ZWJcIjtcbiAqXG4gKiBjb25zdCB3YWl0Rm9yUmVjZWlwdE9wdGlvbnMgPSBhd2FpdCBzZW5kQmF0Y2hUcmFuc2FjdGlvbih7XG4gKiAgYWNjb3VudCxcbiAqICB0cmFuc2FjdGlvbnNcbiAqIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZW5kQmF0Y2hUcmFuc2FjdGlvbihvcHRpb25zKSB7XG4gICAgY29uc3QgeyBhY2NvdW50LCB0cmFuc2FjdGlvbnMgfSA9IG9wdGlvbnM7XG4gICAgaWYgKCFhY2NvdW50KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIm5vdCBjb25uZWN0ZWRcIik7XG4gICAgfVxuICAgIGlmICh0cmFuc2FjdGlvbnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHRyYW5zYWN0aW9ucyB0byBzZW5kXCIpO1xuICAgIH1cbiAgICBjb25zdCBmaXJzdFR4ID0gdHJhbnNhY3Rpb25zWzBdO1xuICAgIGlmICghZmlyc3RUeCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyB0cmFuc2FjdGlvbnMgdG8gc2VuZFwiKTtcbiAgICB9XG4gICAgaWYgKGFjY291bnQuc2VuZEJhdGNoVHJhbnNhY3Rpb24pIHtcbiAgICAgICAgY29uc3Qgc2VyaWFsaXplZFR4cyA9IGF3YWl0IFByb21pc2UuYWxsKHRyYW5zYWN0aW9ucy5tYXAoYXN5bmMgKHR4KSA9PiB7XG4gICAgICAgICAgICAvLyBubyBuZWVkIHRvIGVzdGltYXRlIGdhcyBmb3IgdGhlc2UsIGdhcyB3aWxsIGJlIGVzdGltYXRlZCBvbiB0aGUgZW50aXJlIGJhdGNoXG4gICAgICAgICAgICBjb25zdCBbZGF0YSwgdG8sIGFjY2Vzc0xpc3QsIHZhbHVlXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgICAgICAgICBlbmNvZGUodHgpLFxuICAgICAgICAgICAgICAgIHJlc29sdmVQcm9taXNlZFZhbHVlKHR4LnRvKSxcbiAgICAgICAgICAgICAgICByZXNvbHZlUHJvbWlzZWRWYWx1ZSh0eC5hY2Nlc3NMaXN0KSxcbiAgICAgICAgICAgICAgICByZXNvbHZlUHJvbWlzZWRWYWx1ZSh0eC52YWx1ZSksXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgICAgIGNvbnN0IHNlcmlhbGl6ZWRUeCA9IHtcbiAgICAgICAgICAgICAgICBhY2Nlc3NMaXN0LFxuICAgICAgICAgICAgICAgIGNoYWluSWQ6IHR4LmNoYWluLmlkLFxuICAgICAgICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgICAgICAgdG8sXG4gICAgICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHNlcmlhbGl6ZWRUeDtcbiAgICAgICAgfSkpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBhY2NvdW50LnNlbmRCYXRjaFRyYW5zYWN0aW9uKHNlcmlhbGl6ZWRUeHMpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4ucmVzdWx0LFxuICAgICAgICAgICAgY2hhaW46IGZpcnN0VHguY2hhaW4sXG4gICAgICAgICAgICBjbGllbnQ6IGZpcnN0VHguY2xpZW50LFxuICAgICAgICB9O1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJBY2NvdW50IGRvZXNuJ3QgaW1wbGVtZW50IHNlbmRCYXRjaFRyYW5zYWN0aW9uXCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VuZC1iYXRjaC10cmFuc2FjdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/send-batch-transaction.js\n"));

/***/ })

}]);