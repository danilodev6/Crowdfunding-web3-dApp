"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_extensions_erc20_write_getApprovalForTransa-c00057"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc20/write/getApprovalForTransaction.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/extensions/erc20/write/getApprovalForTransaction.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getApprovalForTransaction: () => (/* binding */ getApprovalForTransaction)\n/* harmony export */ });\n/* harmony import */ var _contract_contract_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../contract/contract.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/contract/contract.js\");\n/* harmony import */ var _utils_address_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/address.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/address.js\");\n/* harmony import */ var _utils_promise_resolve_promised_value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/promise/resolve-promised-value.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/promise/resolve-promised-value.js\");\n/* harmony import */ var _generated_IERC20_read_allowance_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../__generated__/IERC20/read/allowance.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc20/__generated__/IERC20/read/allowance.js\");\n/* harmony import */ var _generated_IERC20_write_approve_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../__generated__/IERC20/write/approve.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc20/__generated__/IERC20/write/approve.js\");\n\n\n\n\n\n/**\n * When dealing with transactions that involve ERC20 tokens (Airdropping ERC20, buy NFTs with ERC20, etc.)\n * you often have to do a pre-check to see if the targeted contract has the sufficient allowance to \"take\" the ERC20 tokens from the caller's wallet.\n *\n * This extension is a handy method that checks for the allowance and requests to approve for more if current allowance is insufficient\n *\n * @param options GetApprovalForTransactionParams\n * @returns a PreparedTransaction\n *\n * @example\n * ```ts\n * import { getApprovalForTransaction } from \"thirdweb/extensions/erc20\";\n * import { sendAndConfirmTransaction } from \"thirdweb\";\n *\n * async function buyNFT() {\n *   const buyTransaction = ... // could be a marketplacev3's buyFromListing\n *\n *   // Check if you need to approve spending for the involved ERC20 contract\n *   const approveTx = await getApprovalForTransaction({\n *     transaction: buyTransaction,\n *     account, // the connected account\n *   });\n *   if (approveTx) {\n *     await sendAndConfirmTransaction({\n *       transaction: approveTx,\n *       account,\n *     })\n *   }\n *   // Once approved, you can finally perform the buy transaction\n *   await sendAndConfirmTransaction({\n *     transaction: buyTransaction,\n *     account,\n *   });\n * }\n * ```\n *\n * @transaction\n */\nasync function getApprovalForTransaction(options) {\n    const { transaction, account } = options;\n    if (!account) {\n        return null;\n    }\n    const erc20Value = await (0,_utils_promise_resolve_promised_value_js__WEBPACK_IMPORTED_MODULE_0__.resolvePromisedValue)(transaction.erc20Value);\n    if (erc20Value) {\n        const target = await (0,_utils_promise_resolve_promised_value_js__WEBPACK_IMPORTED_MODULE_0__.resolvePromisedValue)(transaction.to);\n        if (!target ||\n            !erc20Value.tokenAddress ||\n            (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_1__.getAddress)(target) === (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_1__.getAddress)(erc20Value.tokenAddress)) {\n            return null;\n        }\n        const contract = (0,_contract_contract_js__WEBPACK_IMPORTED_MODULE_2__.getContract)({\n            address: erc20Value.tokenAddress,\n            chain: transaction.chain,\n            client: transaction.client,\n        });\n        const approvedValue = await (0,_generated_IERC20_read_allowance_js__WEBPACK_IMPORTED_MODULE_3__.allowance)({\n            contract,\n            owner: account.address,\n            spender: target,\n        });\n        if (approvedValue > erc20Value.amountWei) {\n            return null;\n        }\n        return (0,_generated_IERC20_write_approve_js__WEBPACK_IMPORTED_MODULE_4__.approve)({\n            contract,\n            spender: target,\n            value: erc20Value.amountWei,\n        });\n    }\n    return null;\n}\n//# sourceMappingURL=getApprovalForTransaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9leHRlbnNpb25zL2VyYzIwL3dyaXRlL2dldEFwcHJvdmFsRm9yVHJhbnNhY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTREO0FBQ0w7QUFDaUM7QUFDbEI7QUFDSDtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw0QkFBNEI7QUFDeEMsWUFBWSw0QkFBNEI7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksdUJBQXVCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw4RkFBb0I7QUFDakQ7QUFDQSw2QkFBNkIsOEZBQW9CO0FBQ2pEO0FBQ0E7QUFDQSxZQUFZLDZEQUFVLGFBQWEsNkRBQVU7QUFDN0M7QUFDQTtBQUNBLHlCQUF5QixrRUFBVztBQUNwQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsb0NBQW9DLDhFQUFTO0FBQzdDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxlQUFlLDJFQUFPO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2Rhbmlsby9EZXZlbG9wZXIvRU5WL0Jsb2NrY2hhaW4vd2ViM3Byb2plY3RzL3dlYjNjZi93ZWIzY2ZhcHAvbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL2V4dGVuc2lvbnMvZXJjMjAvd3JpdGUvZ2V0QXBwcm92YWxGb3JUcmFuc2FjdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDb250cmFjdCB9IGZyb20gXCIuLi8uLi8uLi9jb250cmFjdC9jb250cmFjdC5qc1wiO1xuaW1wb3J0IHsgZ2V0QWRkcmVzcyB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9hZGRyZXNzLmpzXCI7XG5pbXBvcnQgeyByZXNvbHZlUHJvbWlzZWRWYWx1ZSB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9wcm9taXNlL3Jlc29sdmUtcHJvbWlzZWQtdmFsdWUuanNcIjtcbmltcG9ydCB7IGFsbG93YW5jZSB9IGZyb20gXCIuLi9fX2dlbmVyYXRlZF9fL0lFUkMyMC9yZWFkL2FsbG93YW5jZS5qc1wiO1xuaW1wb3J0IHsgYXBwcm92ZSB9IGZyb20gXCIuLi9fX2dlbmVyYXRlZF9fL0lFUkMyMC93cml0ZS9hcHByb3ZlLmpzXCI7XG4vKipcbiAqIFdoZW4gZGVhbGluZyB3aXRoIHRyYW5zYWN0aW9ucyB0aGF0IGludm9sdmUgRVJDMjAgdG9rZW5zIChBaXJkcm9wcGluZyBFUkMyMCwgYnV5IE5GVHMgd2l0aCBFUkMyMCwgZXRjLilcbiAqIHlvdSBvZnRlbiBoYXZlIHRvIGRvIGEgcHJlLWNoZWNrIHRvIHNlZSBpZiB0aGUgdGFyZ2V0ZWQgY29udHJhY3QgaGFzIHRoZSBzdWZmaWNpZW50IGFsbG93YW5jZSB0byBcInRha2VcIiB0aGUgRVJDMjAgdG9rZW5zIGZyb20gdGhlIGNhbGxlcidzIHdhbGxldC5cbiAqXG4gKiBUaGlzIGV4dGVuc2lvbiBpcyBhIGhhbmR5IG1ldGhvZCB0aGF0IGNoZWNrcyBmb3IgdGhlIGFsbG93YW5jZSBhbmQgcmVxdWVzdHMgdG8gYXBwcm92ZSBmb3IgbW9yZSBpZiBjdXJyZW50IGFsbG93YW5jZSBpcyBpbnN1ZmZpY2llbnRcbiAqXG4gKiBAcGFyYW0gb3B0aW9ucyBHZXRBcHByb3ZhbEZvclRyYW5zYWN0aW9uUGFyYW1zXG4gKiBAcmV0dXJucyBhIFByZXBhcmVkVHJhbnNhY3Rpb25cbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGdldEFwcHJvdmFsRm9yVHJhbnNhY3Rpb24gfSBmcm9tIFwidGhpcmR3ZWIvZXh0ZW5zaW9ucy9lcmMyMFwiO1xuICogaW1wb3J0IHsgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbiB9IGZyb20gXCJ0aGlyZHdlYlwiO1xuICpcbiAqIGFzeW5jIGZ1bmN0aW9uIGJ1eU5GVCgpIHtcbiAqICAgY29uc3QgYnV5VHJhbnNhY3Rpb24gPSAuLi4gLy8gY291bGQgYmUgYSBtYXJrZXRwbGFjZXYzJ3MgYnV5RnJvbUxpc3RpbmdcbiAqXG4gKiAgIC8vIENoZWNrIGlmIHlvdSBuZWVkIHRvIGFwcHJvdmUgc3BlbmRpbmcgZm9yIHRoZSBpbnZvbHZlZCBFUkMyMCBjb250cmFjdFxuICogICBjb25zdCBhcHByb3ZlVHggPSBhd2FpdCBnZXRBcHByb3ZhbEZvclRyYW5zYWN0aW9uKHtcbiAqICAgICB0cmFuc2FjdGlvbjogYnV5VHJhbnNhY3Rpb24sXG4gKiAgICAgYWNjb3VudCwgLy8gdGhlIGNvbm5lY3RlZCBhY2NvdW50XG4gKiAgIH0pO1xuICogICBpZiAoYXBwcm92ZVR4KSB7XG4gKiAgICAgYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbih7XG4gKiAgICAgICB0cmFuc2FjdGlvbjogYXBwcm92ZVR4LFxuICogICAgICAgYWNjb3VudCxcbiAqICAgICB9KVxuICogICB9XG4gKiAgIC8vIE9uY2UgYXBwcm92ZWQsIHlvdSBjYW4gZmluYWxseSBwZXJmb3JtIHRoZSBidXkgdHJhbnNhY3Rpb25cbiAqICAgYXdhaXQgc2VuZEFuZENvbmZpcm1UcmFuc2FjdGlvbih7XG4gKiAgICAgdHJhbnNhY3Rpb246IGJ1eVRyYW5zYWN0aW9uLFxuICogICAgIGFjY291bnQsXG4gKiAgIH0pO1xuICogfVxuICogYGBgXG4gKlxuICogQHRyYW5zYWN0aW9uXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBcHByb3ZhbEZvclRyYW5zYWN0aW9uKG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IHRyYW5zYWN0aW9uLCBhY2NvdW50IH0gPSBvcHRpb25zO1xuICAgIGlmICghYWNjb3VudCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgZXJjMjBWYWx1ZSA9IGF3YWl0IHJlc29sdmVQcm9taXNlZFZhbHVlKHRyYW5zYWN0aW9uLmVyYzIwVmFsdWUpO1xuICAgIGlmIChlcmMyMFZhbHVlKSB7XG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGF3YWl0IHJlc29sdmVQcm9taXNlZFZhbHVlKHRyYW5zYWN0aW9uLnRvKTtcbiAgICAgICAgaWYgKCF0YXJnZXQgfHxcbiAgICAgICAgICAgICFlcmMyMFZhbHVlLnRva2VuQWRkcmVzcyB8fFxuICAgICAgICAgICAgZ2V0QWRkcmVzcyh0YXJnZXQpID09PSBnZXRBZGRyZXNzKGVyYzIwVmFsdWUudG9rZW5BZGRyZXNzKSkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29udHJhY3QgPSBnZXRDb250cmFjdCh7XG4gICAgICAgICAgICBhZGRyZXNzOiBlcmMyMFZhbHVlLnRva2VuQWRkcmVzcyxcbiAgICAgICAgICAgIGNoYWluOiB0cmFuc2FjdGlvbi5jaGFpbixcbiAgICAgICAgICAgIGNsaWVudDogdHJhbnNhY3Rpb24uY2xpZW50LFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgYXBwcm92ZWRWYWx1ZSA9IGF3YWl0IGFsbG93YW5jZSh7XG4gICAgICAgICAgICBjb250cmFjdCxcbiAgICAgICAgICAgIG93bmVyOiBhY2NvdW50LmFkZHJlc3MsXG4gICAgICAgICAgICBzcGVuZGVyOiB0YXJnZXQsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoYXBwcm92ZWRWYWx1ZSA+IGVyYzIwVmFsdWUuYW1vdW50V2VpKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXBwcm92ZSh7XG4gICAgICAgICAgICBjb250cmFjdCxcbiAgICAgICAgICAgIHNwZW5kZXI6IHRhcmdldCxcbiAgICAgICAgICAgIHZhbHVlOiBlcmMyMFZhbHVlLmFtb3VudFdlaSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0QXBwcm92YWxGb3JUcmFuc2FjdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc20/write/getApprovalForTransaction.js\n"));

/***/ })

}]);