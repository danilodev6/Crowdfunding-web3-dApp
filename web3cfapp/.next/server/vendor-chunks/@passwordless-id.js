"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@passwordless-id";
exports.ids = ["vendor-chunks/@passwordless-id"];
exports.modules = {

/***/ "(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authenticatorMetadata: () => (/* binding */ authenticatorMetadata)\n/* harmony export */ });\n/**\n * The source comes from\n * \"official\" https://mds.fidoalliance.org/\n * and the\n * \"community-driven\" https://github.com/passkeydeveloper/passkey-authenticator-aaguids\n * combined together.\n */\nconst authenticatorMetadata = {\n    \"00000000-0000-0000-0000-000000000000\": \"Unknown authenticator\",\n    \"0076631b-d4a0-427f-5773-0ec71c9e0279\": \"HYPR FIDO2 Authenticator\",\n    \"01020304-0506-0708-0102-030405060708\": \"Chromium Virtual Authenticator (browser dev tools)\",\n    \"050dd0bc-ff20-4265-8d5d-305c4b215192\": \"eToken Fusion FIPS\",\n    \"07a9f89c-6407-4594-9d56-621d5f1e358b\": \"NXP Semiconductros FIDO2 Conformance Testing CTAP2 Authenticator\",\n    \"08987058-cadc-4b81-b6e1-30de50dcbe96\": \"Windows Hello\",\n    \"092277e5-8437-46b5-b911-ea64b294acb7\": \"Taglio CTAP2.1 CS\",\n    \"09591fc6-9811-48f7-8f57-b9f23df6413f\": \"Pone Biometrics OFFPAD Authenticator\",\n    \"0acf3011-bc60-f375-fb53-6f05f43154e0\": \"Nymi FIDO2 Authenticator\",\n    \"0bb43545-fd2c-4185-87dd-feb0b2916ace\": \"Security Key NFC by Yubico - Enterprise Edition\",\n    \"0d9b2e56-566b-c393-2940-f821b7f15d6d\": \"Excelsecu eSecu FIDO2 Pro Security Key\",\n    \"0db01cd6-5618-455b-bb46-1ec203d3213e\": \"GoldKey Security Token\",\n    \"0ea242b4-43c4-4a1b-8b17-dd6d0b6baec6\": \"Keeper\",\n    \"10c70715-2a9a-4de1-b0aa-3cff6d496d39\": \"eToken Fusion NFC FIPS\",\n    \"1105e4ed-af1d-02ff-ffff-ffffffffffff\": \"Egomet FIDO2 Authenticator for Android\",\n    \"12755c32-8ad1-46eb-881c-e0b38d848b09\": \"Feitian ePass FIDO Authenticator (CTAP2.1, CTAP2.0, U2F)\",\n    \"12ded745-4bed-47d4-abaa-e713f51d6393\": \"Feitian AllinOne FIDO2 Authenticator\",\n    \"146e77ef-11eb-4423-b847-ce77864e9411\": \"eToken Fusion NFC PIV\",\n    \"149a2021-8ef6-4133-96b8-81f8d5b7f1f5\": \"Security Key by Yubico with NFC\",\n    \"17290f1e-c212-34d0-1423-365d729f09d9\": \"Thales PIN iOS SDK\",\n    \"175cd298-83d2-4a26-b637-313c07a6434e\": \"Chunghwa Telecom FIDO2 Smart Card Authenticator\",\n    \"19083c3d-8383-4b18-bc03-8f1c9ab2fd1b\": \"YubiKey 5 Series\",\n    \"1ac71f64-468d-4fe0-bef1-0e5f2f551f18\": \"YubiKey 5 Series with NFC (Enterprise Profile)\",\n    \"1c086528-58d5-f211-823c-356786e36140\": \"Atos CardOS FIDO2\",\n    \"1d1b4e33-76a1-47fb-97a0-14b10d0933f1\": \"Cryptnox FIDO2.1\",\n    \"1d8cac46-47a1-3386-af50-e88ae46fe802\": \"Ledger Flex FIDO2 Authenticator\",\n    \"1e906e14-77af-46bc-ae9f-fe6ef18257e4\": \"VeridiumID Passkey iOS SDK\",\n    \"20ac7a17-c814-4833-93fe-539f0d5e3389\": \"YubiKey 5 Series (Enterprise Profile)\",\n    \"20f0be98-9af9-986a-4b42-8eca4acb28e4\": \"Excelsecu eSecu FIDO2 Fingerprint Security Key\",\n    \"2194b428-9397-4046-8f39-007a1605a482\": \"IDPrime 931 Fido\",\n    \"22248c4c-7a12-46e2-9a41-44291b373a4d\": \"LogMeOnce\",\n    \"234cd403-35a2-4cc2-8015-77ea280c77f5\": \"Feitian ePass FIDO2-NFC Series (CTAP2.1, CTAP2.0, U2F)\",\n    \"23786452-f02d-4344-87ed-aaf703726881\": \"SafeNet eToken Fusion CC\",\n    \"24673149-6c86-42e7-98d9-433fb5b73296\": \"YubiKey 5 Series with Lightning\",\n    \"260e3021-482d-442d-838c-7edfbe153b7e\": \"Feitian ePass FIDO2-NFC Plus Authenticator\",\n    \"2772ce93-eb4b-4090-8b73-330f48477d73\": \"Security Key NFC by Yubico - Enterprise Edition Preview\",\n    \"2a55aee6-27cb-42c0-bc6e-04efe999e88a\": \"HID Crescendo 4000\",\n    \"2bff89f2-323a-48fc-b7c8-9ff7fe87c07e\": \"Feitian BioPass FIDO2 Pro (Enterprise Profile)\",\n    \"2c0df832-92de-4be1-8412-88a8f074df4a\": \"Feitian FIDO Smart Card\",\n    \"2c2aeed8-8174-4159-814b-486e92a261d0\": \"NEOWAVE WINKEO V2.0\",\n    \"2cd2f727-f6ca-44da-8f48-5c2e5da000a2\": \"Nitrokey 3 AM\",\n    \"2d3bec26-15ee-4f5d-88b2-53622490270b\": \"HID Crescendo Key V2\",\n    \"2fc0579f-8113-47ea-b116-bb5a8db9202a\": \"YubiKey 5 Series with NFC\",\n    \"2ffd6452-01da-471f-821b-ea4bf6c8676a\": \"IDPrime 941 Fido\",\n    \"30b5035e-d297-4fc1-b00b-addc96ba6a97\": \"OneSpan FIDO Touch\",\n    \"30b5035e-d297-4ff1-010b-addc96ba6a98\": \"OneSpan DIGIPASS FX1a\",\n    \"30b5035e-d297-4ff1-b00b-addc96ba6a98\": \"OneSpan DIGIPASS FX1 BIO\",\n    \"30b5035e-d297-4ff7-b00b-addc96ba6a98\": \"OneSpan DIGIPASS FX7\",\n    \"3124e301-f14e-4e38-876d-fbeeb090e7bf\": \"YubiKey 5 Series with Lightning Preview\",\n    \"31c3f7ff-bf15-4327-83ec-9336abcbcd34\": \"WinMagic FIDO Eazy - Software\",\n    \"341e4da9-3c2e-8103-5a9f-aad887135200\": \"Ledger Nano S FIDO2 Authenticator\",\n    \"34744913-4f57-4e6e-a527-e9ec3c4b94e6\": \"YubiKey Bio Series - Multi-protocol Edition\",\n    \"34f5766d-1536-4a24-9033-0e294e510fb0\": \"YubiKey 5 Series with NFC Preview\",\n    \"361a3082-0278-4583-a16f-72a527f973e4\": \"eWBM eFA500 FIDO2 Authenticator\",\n    \"3789da91-f943-46bc-95c3-50ea2012f03a\": \"NEOWAVE Winkeo FIDO2\",\n    \"39589099-9a75-49fc-afaa-801ca211c62a\": \"Feitian ePass FIDO-NFC (Enterprise Profile) (CTAP2.1, CTAP2.0, U2F)\",\n    \"39a5647e-1853-446c-a1f6-a79bae9f5bc7\": \"IDmelon\",\n    \"3a662962-c6d4-4023-bebb-98ae92e78e20\": \"YubiKey 5 FIPS Series with Lightning (Enterprise Profile)\",\n    \"3b1adb99-0dfe-46fd-90b8-7f7614a4de2a\": \"GoTrust Idem Key FIDO2 Authenticator\",\n    \"3b24bf49-1d45-4484-a917-13175df0867b\": \"YubiKey 5 Series with Lightning (Enterprise Profile)\",\n    \"3e078ffd-4c54-4586-8baa-a77da113aec5\": \"Hideez Key 3 FIDO2\",\n    \"3e22415d-7fdf-4ea4-8a0c-dd60c4249b9d\": \"Feitian iePass FIDO Authenticator\",\n    \"3f59672f-20aa-4afe-b6f4-7e5e916b6d98\": \"Arculus FIDO 2.1 Key Card [P71]\",\n    \"3fd410dc-8ab7-4b86-a1cb-c7174620b2dc\": \"IDEMIA SOLVO Fly 80 R1 FIDO Card Draft\",\n    \"42b4fb4a-2866-43b2-9bf7-6c6669c2e5d3\": \"Google Titan Security Key v2\",\n    \"42df17de-06ba-4177-a2bb-6701be1380d6\": \"Feitian BioPass FIDO2 Plus Authenticator\",\n    \"454e5346-4944-4ffd-6c93-8e9267193e9a\": \"Ensurity ThinC\",\n    \"454e5346-4944-4ffd-6c93-8e9267193e9b\": \"Ensurity AUTH BioPro\",\n    \"4599062e-6926-4fe7-9566-9e8fb1aedaa0\": \"YubiKey 5 Series (Enterprise Profile)\",\n    \"46544d5d-8f5d-4db4-89ac-ea8977073fff\": \"Foongtone FIDO Authenticator\",\n    \"47ab2fb4-66ac-4184-9ae1-86be814012d5\": \"Security Key NFC by Yubico - Enterprise Edition\",\n    \"4b3f8944-d4f2-4d21-bb19-764a986ec160\": \"KeyXentic FIDO2 Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"4b89f401-464e-4745-a520-486ddfc5d80e\": \"IIST FIDO2 Authenticator\",\n    \"4c0cf95d-2f40-43b5-ba42-4c83a11c04ba\": \"Feitian BioPass FIDO2 Pro Authenticator\",\n    \"4c50ff10-1057-4fc6-b8ed-43a529530c3c\": \"ImproveID Authenticator\",\n    \"4d41190c-7beb-4a84-8018-adf265a6352d\": \"Thales IDPrime FIDO Bio\",\n    \"4e768f2c-5fab-48b3-b300-220eb487752b\": \"Hideez Key 4 FIDO2 SDK\",\n    \"504d7149-4e4c-3841-4555-55445a677357\": \"WiSECURE AuthTron USB FIDO2 Authenticator\",\n    \"50726f74-6f6e-5061-7373-50726f746f6e\": \"Proton Pass\",\n    \"50a45b0c-80e7-f944-bf29-f552bfa2e048\": \"ACS FIDO Authenticator\",\n    \"516d3969-5a57-5651-5958-4e7a49434167\": \"SmartDisplayer BobeePass FIDO2 Authenticator\",\n    \"531126d6-e717-415c-9320-3d9aa6981239\": \"Dashlane\",\n    \"53414d53-554e-4700-0000-000000000000\": \"Samsung Pass\",\n    \"5343502d-5343-5343-6172-644649444f32\": \"ESS Smart Card Inc. Authenticator\",\n    \"54d9fee8-e621-4291-8b18-7157b99c5bec\": \"HID Crescendo Enabled\",\n    \"5626bed4-e756-430b-a7ff-ca78c8b12738\": \"VALMIDO PRO FIDO\",\n    \"57235694-51a5-4a4d-a81a-f42185df6502\": \"SHALO AUTH\",\n    \"5753362b-4e6b-6345-7b2f-255438404c75\": \"WiSECURE Blentity FIDO2 Authenticator\",\n    \"57f7de54-c807-4eab-b1c6-1c9be7984e92\": \"YubiKey 5 FIPS Series\",\n    \"58276709-bb4b-4bb3-baf1-60eea99282a7\": \"YubiKey Bio Series - Multi-protocol Edition 1VDJSN\",\n    \"58b44d0b-0a7c-f33a-fd48-f7153c871352\": \"Ledger Nano S Plus FIDO2 Authenticator\",\n    \"59f85fe7-faa5-4c92-9f52-697b9d4d5473\": \"RSA Authenticator 4 for Android\",\n    \"5b0e46ba-db02-44ac-b979-ca9b84f5e335\": \"YubiKey 5 FIPS Series with Lightning Preview\",\n    \"5ca1ab1e-1337-fa57-f1d0-a117e71ca702\": \"Allthenticator iOS App: roaming BLE FIDO2 Allthenticator for Windows, Mac, Linux, and Allthenticate door readers\",\n    \"5ca1ab1e-fa57-1337-f1d0-a117371ca702\": \"Allthenticator Android App: roaming BLE FIDO2 Allthenticator for Windows, Mac, Linux, and Allthenticate door readers\",\n    \"5d629218-d3a5-11ed-afa1-0242ac120002\": \"Swissbit iShield Key Pro\",\n    \"5e264d9d-28ef-4d34-95b4-5941e7a4faa8\": \"Ideem ZSM FIDO2 Authenticator\",\n    \"5ea308b2-7ac7-48b9-ac09-7e2da9015f8c\": \"Veridium Android SDK\",\n    \"5eaff75a-dd43-451f-af9f-87c9eeae293e\": \"Swissbit iShield Key 2 FIPS Enterprise\",\n    \"5fdb81b8-53f0-4967-a881-f5ec26fe4d18\": \"VinCSS FIDO2 Authenticator\",\n    \"6002f033-3c07-ce3e-d0f7-0ffe5ed42543\": \"Excelsecu eSecu FIDO2 Fingerprint Key\",\n    \"6028b017-b1d4-4c02-b4b3-afcdafc96bb2\": \"Windows Hello\",\n    \"61250591-b2bc-4456-b719-0b17be90bb30\": \"eWBM eFPA FIDO2 Authenticator\",\n    \"62e54e98-c209-4df3-b692-de71bb6a8528\": \"YubiKey 5 FIPS Series with NFC Preview\",\n    \"662ef48a-95e2-4aaa-a6c1-5b9c40375824\": \"YubiKey 5 Series with NFC - Enhanced PIN\",\n    \"664d9f67-84a2-412a-9ff7-b4f7d8ee6d05\": \"OpenSK authenticator\",\n    \"66a0ccb3-bd6a-191f-ee06-e375c50b9846\": \"Thales Bio iOS SDK\",\n    \"692db549-7ae5-44d5-a1e5-dd20a493b723\": \"HID Crescendo Key\",\n    \"69700f79-d1fb-472e-bd9b-a3a3b9a9eda0\": \"Pone Biometrics OFFPAD Authenticator\",\n    \"69e7c36f-f2f6-9e0d-07a6-bcc243262e6b\": \"OneKey FIDO2 Authenticator\",\n    \"6ab56fad-881f-4a43-acb2-0be065924522\": \"YubiKey 5 Series with NFC (Enterprise Profile)\",\n    \"6d44ba9b-f6ec-2e49-b930-0c8fe920cb73\": \"Security Key by Yubico with NFC\",\n    \"6dae43be-af9c-417b-8b9f-1b611168ec60\": \"Dapple Authenticator from Dapple Security Inc.\",\n    \"6e24d385-004a-16a0-7bfe-efd963845b34\": \"Ledger Stax FIDO2 Authenticator\",\n    \"6e8d1eae-8d40-4c25-bcf8-4633959afc71\": \"Veridium iOS SDK\",\n    \"6ec5cff2-a0f9-4169-945b-f33b563f7b99\": \"YubiKey Bio Series - Multi-protocol Edition (Enterprise Profile)\",\n    \"70e7c36f-f2f6-9e0d-07a6-bcc243262e6b\": \"OneKey FIDO2 Bluetooth Authenticator\",\n    \"72c6b72d-8512-4c66-8359-9d3d10d9222f\": \"Security Key NFC by Yubico - Enterprise Edition (Enterprise Profile)\",\n    \"73402251-f2a8-4f03-873e-3cb6db604b03\": \"uTrust FIDO2 Security Key\",\n    \"73bb0cd4-e502-49b8-9c6f-b59445bf720b\": \"YubiKey 5 FIPS Series\",\n    \"7409272d-1ff9-4e10-9fc9-ac0019c124fd\": \"YubiKey Bio Series - FIDO Edition\",\n    \"74820b05-a6c9-40f9-8fb0-9f86aca93998\": \"SafeNet eToken Fusion\",\n    \"760eda36-00aa-4d29-855b-4012a182cdeb\": \"Security Key NFC by Yubico Preview\",\n    \"77010bd7-212a-4fc9-b236-d2ca5e9d4084\": \"Feitian BioPass FIDO2 Authenticator\",\n    \"771b48fd-d3d4-4f74-9232-fc157ab0507a\": \"Edge on Mac\",\n    \"773c30d9-5919-4e96-a4f5-db65e95cf890\": \"GSTAG OAK FIDO2 Authenticator\",\n    \"7787a482-13e8-4784-8a06-c7ed49a7aaf4\": \"Swissbit iShield Key 2\",\n    \"78ba3993-d784-4f44-8d6e-cc0a8ad5230e\": \"Feitian ePass FIDO-NFC(CTAP2.1, CTAP2.0, U2F)\",\n    \"7991798a-a7f3-487f-98c0-3faf7a458a04\": \"HID Crescendo Key V3\",\n    \"79f3c8ba-9e35-484b-8f47-53a5a0f5c630\": \"YubiKey 5 FIPS Series with NFC (Enterprise Profile)\",\n    \"7b96457d-e3cd-432b-9ceb-c9fdd7ef7432\": \"YubiKey 5 FIPS Series with Lightning\",\n    \"7d1351a6-e097-4852-b8bf-c9ac5c9ce4a3\": \"YubiKey Bio Series - Multi-protocol Edition\",\n    \"7d2afadd-bf6b-44a2-a66b-e831fceb8eff\": \"Taglio CTAP2.1 EP\",\n    \"7e3f3d30-3557-4442-bdae-139312178b39\": \"RSA DS100\",\n    \"817cdab8-0d51-4de1-a821-e25b88519cf3\": \"Swissbit iShield Key 2 FIPS\",\n    \"820d89ed-d65a-409e-85cb-f73f0578f82a\": \"IDmelon iOS Authenticator\",\n    \"82b0a720-127a-4788-b56d-d1d4b2d82eac\": \"ID-One Key\",\n    \"833b721a-ff5f-4d00-bb2e-bdda3ec01e29\": \"Feitian ePass FIDO2 Authenticator\",\n    \"83c47309-aabb-4108-8470-8be838b573cb\": \"YubiKey Bio Series - FIDO Edition (Enterprise Profile)\",\n    \"85203421-48f9-4355-9bc8-8a53846e5083\": \"YubiKey 5 FIPS Series with Lightning\",\n    \"8681a073-5f50-4d52-bce4-e21658d207b3\": \"RSA Authenticator 4 for iOS\",\n    \"87dbc5a1-4c94-4dc8-8a47-97d800fd1f3c\": \"eWBM eFA320 FIDO2 Authenticator\",\n    \"882adaf5-3aa9-4708-8e7d-3957103775b4\": \"T-Shield TrustSec FIDO2 Bio and client PIN version\",\n    \"8836336a-f590-0921-301d-46427531eee6\": \"Thales Bio Android SDK\",\n    \"8876631b-d4a0-427f-5773-0ec71c9e0279\": \"Solo Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"88bbd2f0-342a-42e7-9729-dd158be5407a\": \"Precision InnaIT Key FIDO 2 Level 2 certified\",\n    \"891494da-2c90-4d31-a9cd-4eab0aed1309\": \"Sésame\",\n    \"8976631b-d4a0-427f-5773-0ec71c9e0279\": \"Solo Tap Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"89b19028-256b-4025-8872-255358d950e4\": \"Sentry Enterprises CTAP2 Authenticator\",\n    \"8c39ee86-7f9a-4a95-9ba3-f6b097e5c2ee\": \"YubiKey Bio Series - FIDO Edition (Enterprise Profile)\",\n    \"8c97a730-3f7b-41a6-87d6-1e9b62bda6f0\": \"FT-JCOS FIDO Fingerprint Card\",\n    \"8d1b1fcb-3c76-49a9-9129-5515b346aa02\": \"IDEMIA ID-ONE Card\",\n    \"8d4378b0-725d-4432-b3c2-01fcdaf46286\": \"VeridiumID Passkey Android SDK\",\n    \"8da0e4dc-164b-454e-972e-88f362b23d59\": \"CardOS FIDO2 Token\",\n    \"905b4cb4-ed6f-4da9-92fc-45e0d4e9b5c7\": \"YubiKey 5 FIPS Series (Enterprise Profile)\",\n    \"90636e1f-ef82-43bf-bdcf-5255f139d12f\": \"YubiKey Bio Series - Multi-protocol Edition\",\n    \"912435d9-4a88-42f3-972d-1244b0d51420\": \"SI0X FIDO CL WRIST v1.0\",\n    \"91ad6b93-264b-4987-8737-3a690cad6917\": \"Token Ring FIDO2 Authenticator\",\n    \"931327dd-c89b-406c-a81e-ed7058ef36c6\": \"Swissbit iShield Key FIDO2\",\n    \"95442b2e-f15e-4def-b270-efb106facb4e\": \"eWBM eFA310 FIDO2 Authenticator\",\n    \"95e4d58c-056e-4a65-866d-f5a69659e880\": \"TruU Windows Authenticator\",\n    \"970c8d9c-19d2-46af-aa32-3f448db49e35\": \"WinMagic FIDO Eazy - TPM\",\n    \"973446ca-e21c-9a9b-99f5-9b985a67af0f\": \"ACS FIDO Authenticator Card\",\n    \"97e6a830-c952-4740-95fc-7c78dc97ce47\": \"YubiKey Bio Series - Multi-protocol Edition (Enterprise Profile)\",\n    \"9876631b-d4a0-427f-5773-0ec71c9e0279\": \"Somu Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"998f358b-2dd2-4cbe-a43a-e8107438dfb3\": \"OnlyKey Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"99bf4610-ec26-4252-b31f-7380ccd59db5\": \"ZTPass SmartAuth\",\n    \"99ed6c29-4573-4847-816d-78ad8f1c75ef\": \"VeroCard FIDO2 Authenticator\",\n    \"9c835346-796b-4c27-8898-d6032f515cc5\": \"Cryptnox FIDO2\",\n    \"9d3df6ba-282f-11ed-a261-0242ac120002\": \"Arculus FIDO2/U2F Key Card\",\n    \"9ddd1817-af5a-4672-a2b9-3e3dd95000a9\": \"Windows Hello\",\n    \"9e66c661-e428-452a-a8fb-51f7ed088acf\": \"YubiKey 5 FIPS Series with Lightning (RC Preview)\",\n    \"9eb7eabc-9db5-49a1-b6c3-555a802093f4\": \"YubiKey 5 Series with NFC KVZR57\",\n    \"9f0d8150-baa5-4c00-9299-ad62c8bb4e87\": \"GoTrust Idem Card FIDO2 Authenticator\",\n    \"9f77e279-a6e2-4d58-b700-31e5943c6a98\": \"Hyper FIDO Pro\",\n    \"9ff4cc65-6154-4fff-ba09-9e2af7882ad2\": \"Security Key NFC by Yubico - Enterprise Edition (Enterprise Profile)\",\n    \"a02140b7-0cbd-42e1-a9b5-a39da2545114\": \"Feitian BioPass FIDO2 Plus (Enterprise Profile)\",\n    \"a02167b9-ae71-4ac7-9a07-06432ebb6f1c\": \"YubiKey 5 Series with Lightning\",\n    \"a10c6dd9-465e-4226-8198-c7c44b91c555\": \"Kaspersky Password Manager\",\n    \"a1f52be5-dfab-4364-b51c-2bd496b14a56\": \"OCTATCO EzFinger2 FIDO2 AUTHENTICATOR\",\n    \"a25342c0-3cdc-4414-8e46-f4807fca511c\": \"YubiKey 5 Series with NFC\",\n    \"a3975549-b191-fd67-b8fb-017e2917fdb3\": \"Excelsecu eSecu FIDO2 NFC Security Key\",\n    \"a4e9fc6d-4cbe-4758-b8ba-37598bb5bbaa\": \"Security Key NFC by Yubico\",\n    \"a7fc3f84-86a3-4da4-a3d7-eb6485a066d8\": \"NEOWAVE Badgeo FIDO2 (CTAP 2.1)\",\n    \"ab32f0c6-2239-afbb-c470-d2ef4e254db6\": \"TEST (DUMMY RECORD)\",\n    \"ab32f0c6-2239-afbb-c470-d2ef4e254db7\": \"TOKEN2 FIDO2 Security Key\",\n    \"ad08c78a-4e41-49b9-86a2-ac15b06899e2\": \"YubiKey Bio Series - FIDO Edition (Enterprise Profile)\",\n    \"adce0002-35bc-c60a-648b-0b25f1f05503\": \"Chrome on Mac\",\n    \"aeb6569c-f8fb-4950-ac60-24ca2bbe2e52\": \"HID Crescendo C2300\",\n    \"b12eac35-586c-4809-a4b1-d81af6c305cf\": \"Deepnet SafeKey/Classic (NFC)\",\n    \"b267239b-954f-4041-a01b-ee4f33c145b6\": \"authenton1 - CTAP2.1\",\n    \"b2c1a50b-dad8-4dc7-ba4d-0ce9597904bc\": \"YubiKey 5 Series with NFC - Enhanced PIN (Enterprise Profile)\",\n    \"b35a26b2-8f6e-4697-ab1d-d44db4da28c6\": \"Zoho Vault\",\n    \"b415094c-49d3-4c8b-b3fe-7d0ad28a6bc4\": \"ZTPass SmartAuth\",\n    \"b50d5e0a-7f81-4959-9b12-f45407407503\": \"IDPrime 3940 FIDO\",\n    \"b5397666-4885-aa6b-cebf-e52262a439a2\": \"Chromium Browser\",\n    \"b6ede29c-3772-412c-8a78-539c1f4c62d2\": \"Feitian BioPass FIDO2 Plus Authenticator\",\n    \"b78a0a55-6ef8-d246-a042-ba0f6d55050c\": \"LastPass\",\n    \"b7d3f68e-88a6-471e-9ecf-2df26d041ede\": \"Security Key NFC by Yubico\",\n    \"b84e4048-15dc-4dd0-8640-f4f60813c8af\": \"NordPass\",\n    \"b90e7dc1-316e-4fee-a25a-56a666a670fe\": \"YubiKey 5 Series with Lightning (Enterprise Profile)\",\n    \"b92c3f9a-c014-4056-887f-140a2501163b\": \"Security Key by Yubico\",\n    \"b93fd961-f2e6-462f-b122-82002247de78\": \"Android Authenticator\",\n    \"b9f6b7b6-f929-4189-bca9-dd951240c132\": \"Deepnet SafeKey/Classic (USB)\",\n    \"ba76a271-6eb6-4171-874d-b6428dbe3437\": \"ATKey.ProS\",\n    \"ba86dc56-635f-4141-aef6-00227b1b9af6\": \"TruU Windows Authenticator\",\n    \"bada5566-a7aa-401f-bd96-45619a55120d\": \"1Password\",\n    \"bb405265-40cf-4115-93e5-a332c1968d8c\": \"ID-One Card\",\n    \"bbf4b6a7-679d-f6fc-c4f2-8ac0ddf9015a\": \"Excelsecu eSecu FIDO2 PRO Security Key\",\n    \"bc2fe499-0d8e-4ffe-96f3-94a82840cf8c\": \"OCTATCO EzQuant FIDO2 AUTHENTICATOR\",\n    \"be727034-574a-f799-5c76-0929e0430973\": \"Crayonic KeyVault K1 (USB-NFC-BLE FIDO2 Authenticator)\",\n    \"bfc748bb-3429-4faa-b9f9-7cfa9f3b76d0\": \"iPasswords\",\n    \"c1f9a0bc-1dd2-404a-b27f-8e29047a43fd\": \"YubiKey 5 FIPS Series with NFC\",\n    \"c3f47802-de73-4dfc-ba22-671fe3304f90\": \"eToken Fusion NFC PIV Enterprise\",\n    \"c4ddaf11-3032-4e77-b3b9-3a340369b9ad\": \"HID Crescendo Fusion\",\n    \"c5703116-972b-4851-a3e7-ae1259843399\": \"NEOWAVE Badgeo FIDO2\",\n    \"c5ef55ff-ad9a-4b9f-b580-adebafe026d0\": \"YubiKey 5 Series with Lightning\",\n    \"c62100de-759b-4bf8-b22b-63b3e3a80401\": \"Token Ring 3 FIDO2 Authenticator\",\n    \"c80dbd9a-533f-4a17-b941-1a2f1c7cedff\": \"HID Crescendo C3000\",\n    \"c89674e3-a765-4b07-888a-7c086fbdf04b\": \"StarSign FIDO Card\",\n    \"c89e6a38-6c00-5426-5aa5-c9cbf48f0382\": \"ACS FIDO Authenticator NFC\",\n    \"ca4cff1b-5a81-4404-8194-59aabcf1660b\": \"IDPrime 3930 FIDO\",\n    \"ca87cb70-4c1b-4579-a8e8-4efdd7c007e0\": \"FIDO Alliance TruU Sample FIDO2 Authenticator\",\n    \"cb69481e-8ff7-4039-93ec-0a2729a154a8\": \"YubiKey 5 Series\",\n    \"cc45f64e-52a2-451b-831a-4edd8022a202\": \"ToothPic Passkey Provider\",\n    \"cd69adb5-3c7a-deb9-3177-6800ea6cb72a\": \"Thales PIN Android SDK\",\n    \"cdbdaea2-c415-5073-50f7-c04e968640b6\": \"Excelsecu eSecu FIDO2 Security Key\",\n    \"ce6bf97f-9f69-4ba7-9032-97adc6ca5cf1\": \"YubiKey 5 FIPS Series with NFC (RC Preview)\",\n    \"cfcb13a2-244f-4b36-9077-82b79d6a7de7\": \"USB/NFC Passcode Authenticator\",\n    \"d2fbd093-ee62-488d-9dad-1e36389f8826\": \"YubiKey 5 FIPS Series (RC Preview)\",\n    \"d350af52-0351-4ba2-acd3-dfeeadc3f764\": \"pwSafe\",\n    \"d384db22-4d50-ebde-2eac-5765cf1e2a44\": \"Excelsecu eSecu FIDO2 Fingerprint Security Key\",\n    \"d41f5a69-b817-4144-a13c-9ebd6d9254d6\": \"ATKey.Card CTAP2.0\",\n    \"d548826e-79b4-db40-a3d8-11116f7e8349\": \"Bitwarden\",\n    \"d61d3b87-3e7c-4aea-9c50-441c371903ad\": \"KeyVault Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"d7781e5d-e353-46aa-afe2-3ca49f13332a\": \"YubiKey 5 Series with NFC\",\n    \"d7a423ad-3e19-4492-9200-78137dccc136\": \"VivoKey Apex FIDO2\",\n    \"d821a7d4-e97c-4cb6-bd82-4237731fd4be\": \"Hyper FIDO Bio Security Key\",\n    \"d8522d9f-575b-4866-88a9-ba99fa02f35b\": \"YubiKey Bio Series - FIDO Edition\",\n    \"d91c5288-0ef0-49b7-b8ae-21ca0aa6b3f3\": \"KEY-ID FIDO2 Authenticator\",\n    \"d94a29d9-52dd-4247-9c2d-8b818b610389\": \"VeriMark Guard Fingerprint Key\",\n    \"da1fa263-8b25-42b6-a820-c0036f21ba7f\": \"ATKey.Card NFC\",\n    \"dd4ec289-e01d-41c9-bb89-70fa845d4bf2\": \"iCloud Keychain (Managed)\",\n    \"dd86a2da-86a0-4cbe-b462-4bd31f57bc6f\": \"YubiKey Bio Series - FIDO Edition\",\n    \"de503f9c-21a4-4f76-b4b7-558eb55c6f89\": \"Devolutions\",\n    \"e1a96183-5016-4f24-b55b-e3ae23614cc6\": \"ATKey.Pro CTAP2.0\",\n    \"e400ef8c-711d-4692-af46-7f2cf7da23ad\": \"Swissbit iShield Key 2 Enterprise\",\n    \"e416201b-afeb-41ca-a03d-2281c28322aa\": \"ATKey.Pro CTAP2.1\",\n    \"e41b42a3-60ac-4afb-8757-a98f2d7f6c9f\": \"Deepnet SafeKey/Classic (FP)\",\n    \"e77e3c64-05e3-428b-8824-0cbeb04b829d\": \"Security Key NFC by Yubico\",\n    \"e86addcd-7711-47e5-b42a-c18257b0bf61\": \"IDCore 3121 Fido\",\n    \"ea9b8d66-4d01-1d21-3ce4-b6b48cb575d4\": \"Google Password Manager\",\n    \"eabb46cc-e241-80bf-ae9e-96fa6d2975cf\": \"TOKEN2 PIN Plus Security Key Series \",\n    \"eb3b131e-59dc-536a-d176-cb7306da10f5\": \"ellipticSecure MIRkey USB Authenticator\",\n    \"ec31b4cc-2acc-4b8e-9c01-bade00ccbe26\": \"KeyXentic FIDO2 Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"ed042a3a-4b22-4455-bb69-a267b652ae7e\": \"Security Key NFC by Yubico - Enterprise Edition\",\n    \"ee041bce-25e5-4cdb-8f86-897fd6418464\": \"Feitian ePass FIDO2-NFC Authenticator\",\n    \"ee882879-721c-4913-9775-3dfcce97072a\": \"YubiKey 5 Series\",\n    \"efb96b10-a9ee-4b6c-a4a9-d32125ccd4a4\": \"Safenet eToken FIDO\",\n    \"f2145e86-211e-4931-b874-e22bba7d01cc\": \"ID-One Key\",\n    \"f3809540-7f14-49c1-a8b3-8f813b225541\": \"Enpass\",\n    \"f4c63eff-d26c-4248-801c-3736c7eaa93a\": \"FIDO KeyPass S3\",\n    \"f56f58b3-d711-4afc-ba7d-6ac05f88cb19\": \"WinMagic FIDO Eazy - Phone\",\n    \"f7c558a0-f465-11e8-b568-0800200c9a66\": \"KONAI Secp256R1 FIDO2 Conformance Testing CTAP2 Authenticator\",\n    \"f8a011f3-8c0a-4d15-8006-17111f9edc7d\": \"Security Key by Yubico\",\n    \"f8d5c4e9-e539-4c06-8662-ec2a4155a555\": \"StarSign Key Fob\",\n    \"fa2b99dc-9e39-4257-8f92-4a30d23c4118\": \"YubiKey 5 Series with NFC\",\n    \"fbefdf68-fe86-0106-213e-4d5fa24cbe2e\": \"Excelsecu eSecu FIDO2 NFC Security Key\",\n    \"fbfc3007-154e-4ecc-8c0b-6e020557d7bd\": \"iCloud Keychain\",\n    \"fcb1bcb4-f370-078c-6993-bc24d0ae3fbe\": \"Ledger Nano X FIDO2 Authenticator\",\n    \"fcc0118f-cd45-435b-8da1-9782b2da0715\": \"YubiKey 5 FIPS Series with NFC\",\n    \"fdb141b2-5d84-443e-8a35-4698c205a502\": \"KeePassXC\",\n    \"fec067a1-f1d0-4c5e-b4c0-cc3237475461\": \"KX701 SmartToken FIDO\",\n    \"ff4dac45-ede8-4ec2-aced-cf66103f4335\": \"YubiKey 5 Series\",\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/client.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/client.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authenticate: () => (/* binding */ authenticate),\n/* harmony export */   isAutocompleteAvailable: () => (/* binding */ isAutocompleteAvailable),\n/* harmony export */   isAvailable: () => (/* binding */ isAvailable),\n/* harmony export */   isLocalAuthenticator: () => (/* binding */ isLocalAuthenticator),\n/* harmony export */   register: () => (/* binding */ register)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\");\n\n/**\n * Returns whether passwordless authentication is available on this browser/platform or not.\n */\nfunction isAvailable() {\n    return !!window.PublicKeyCredential;\n}\n/**\n * Returns whether the device itself can be used as authenticator.\n */\nasync function isLocalAuthenticator() {\n    return await PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n}\n/**\n * Before \"hints\" were a thing, the \"authenticatorAttachment\" was the way to go.\n */\nfunction getAuthAttachment(hints) {\n    if (!hints || hints.length === 0)\n        return undefined; // The webauthn protocol considers `null` as invalid but `undefined` as \"both\"!\n    if (hints.includes('client-device')) {\n        if (hints.includes('security-key') || hints.includes('hybrid'))\n            return undefined; // both\n        else\n            return \"platform\";\n    }\n    return \"cross-platform\";\n}\n/**\n * For autocomplete / conditional mediation, the ongoing \"authentication\" must be aborted when triggering a registration.\n * It should also be aborted when triggering authentication another time.\n */\nlet ongoingAuth = null;\n/**\n * Creates a cryptographic key pair, in order to register the public key for later passwordless authentication.\n *\n * @param {string|Object} [user] Username or user object (id, name, displayName)\n * @param {string} [challenge] A server-side randomly generated string.\n * @param {number} [timeout=60000] Number of milliseconds the user has to respond to the biometric/PIN check.\n * @param {'required'|'preferred'|'discouraged'} [userVerification='required'] Whether to prompt for biometric/PIN check or not.\n * @param {PublicKeyCredentialHints[]} [hints]: Can contain a list of \"client-device\", \"hybrid\" or \"security-key\"\n * @param {boolean} [attestation=false] If enabled, the device attestation and clientData will be provided as Base64url encoded binary data. Note that this is not available on some platforms.\n * @param {'discouraged'|'preferred'|'required'} [discoverable] A \"discoverable\" credential can be selected using `authenticate(...)` without providing credential IDs.\n *              Instead, a native pop-up will appear for user selection.\n *              This may have an impact on the \"passkeys\" user experience and syncing behavior of the key.\n * @param {Record<string, any>} [options.customProperties] - **Advanced usage**: An object of additional\n *     properties that will be merged into the WebAuthn create options. This can be used to\n *     explicitly set fields such as `excludeCredentials`.\n *\n * @example\n * const registration = await register({\n *   user: { id: 'user-id', name: 'john', displayName: 'John' },\n *   challenge: 'base64url-encoded-challenge',\n *   customProperties: {\n *     excludeCredentials: [\n *       { id: 'base64url-credential-id', type: 'public-key' },\n *     ],\n *   },\n * });\n */\nasync function register(options) {\n    if (!options.challenge)\n        throw new Error('\"challenge\" required');\n    if (!options.user)\n        throw new Error('\"user\" required');\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isBase64url(options.challenge))\n        throw new Error('Provided challenge is not properly encoded in Base64url');\n    const user = typeof (options.user) === 'string' ? { name: options.user } : options.user;\n    if (!user.id)\n        user.id = crypto.randomUUID();\n    const creationOptions = {\n        challenge: _utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBase64url(options.challenge),\n        rp: {\n            id: options.domain ?? window.location.hostname,\n            name: options.domain ?? window.location.hostname\n        },\n        user: {\n            id: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBuffer(user.id),\n            name: user.name,\n            displayName: user.displayName ?? user.name,\n        },\n        hints: options.hints,\n        pubKeyCredParams: [\n            { alg: -7, type: \"public-key\" }, // ES256 (Webauthn's default algorithm)\n            { alg: -257, type: \"public-key\" }, // RS256 (for older Windows Hello and others)\n        ],\n        timeout: options.timeout,\n        authenticatorSelection: {\n            userVerification: options.userVerification,\n            authenticatorAttachment: getAuthAttachment(options.hints),\n            residentKey: options.discoverable ?? 'preferred', // see https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredentialCreationOptions#residentkey\n            requireResidentKey: (options.discoverable === 'required') // mainly for backwards compatibility, see https://www.w3.org/TR/webauthn/#dictionary-authenticatorSelection\n        },\n        attestation: \"direct\",\n        ...options.customProperties,\n    };\n    console.debug(creationOptions);\n    if (ongoingAuth != null)\n        ongoingAuth.abort('Cancel ongoing authentication');\n    ongoingAuth = new AbortController();\n    const raw = await navigator.credentials.create({\n        publicKey: creationOptions,\n        signal: ongoingAuth?.signal\n    });\n    const response = raw.response;\n    ongoingAuth = null;\n    console.debug(raw);\n    if (raw.type != \"public-key\")\n        throw \"Unexpected credential type!\";\n    const publicKey = response.getPublicKey();\n    if (!publicKey)\n        throw \"Non-compliant browser or authenticator!\";\n    // This should provide the same as `response.toJson()` which is sadly only available on FireFox\n    const json = {\n        type: raw.type,\n        id: raw.id,\n        rawId: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(raw.rawId), // Same as ID, but useful in tests\n        authenticatorAttachment: raw.authenticatorAttachment,\n        clientExtensionResults: raw.getClientExtensionResults(),\n        response: {\n            attestationObject: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.attestationObject),\n            authenticatorData: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.getAuthenticatorData()),\n            clientDataJSON: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.clientDataJSON),\n            publicKey: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(publicKey),\n            publicKeyAlgorithm: response.getPublicKeyAlgorithm(),\n            transports: response.getTransports(),\n        },\n        user, // That's our own addition \n    };\n    return json;\n}\nasync function isAutocompleteAvailable() {\n    return PublicKeyCredential.isConditionalMediationAvailable && PublicKeyCredential.isConditionalMediationAvailable();\n}\n/**\n * Signs a challenge using one of the provided credentials IDs in order to authenticate the user.\n *\n * @param {string[]} credentialIds The list of credential IDs that can be used for signing.\n * @param {string} challenge A server-side randomly generated string, the base64 encoded version will be signed.\n * @param {number} [timeout=60000] Number of milliseconds the user has to respond to the biometric/PIN check.\n * @param {'required'|'preferred'|'discouraged'} [userVerification='required'] Whether to prompt for biometric/PIN check or not.\n * @param {boolean} [conditional] Does not return directly, but only when the user has selected a credential in the input field with `autocomplete=\"username webauthn\"`\n * @param {Record<string, any>} [options.customProperties] - **Advanced usage**: An object of additional\n *     properties that will be merged into the WebAuthn authenticate options. This can be used to\n *     explicitly set fields such as `extensions`.\n *\n * @example\n * const authentication = await authenticate({\n *   challenge: 'base64url-encoded-challenge',\n *   allowCredentials: [],\n *   customProperties: {\n *     extensions: {\n *      uvm: true, // User verification methods extension\n *      appid: \"https://legacy-app-id.example.com\", // App ID extension for backward compatibility\n *     },\n *   },\n * });\n */\nasync function authenticate(options) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isBase64url(options.challenge))\n        throw new Error('Provided challenge is not properly encoded in Base64url');\n    if (options.autocomplete && !(await isAutocompleteAvailable()))\n        throw new Error('Passkeys autocomplete with conditional mediation is not available in this browser.');\n    let authOptions = {\n        challenge: _utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBase64url(options.challenge),\n        rpId: options.domain ?? window.location.hostname,\n        allowCredentials: options.allowCredentials?.map(toPublicKeyCredentialDescriptor),\n        hints: options.hints,\n        userVerification: options.userVerification,\n        timeout: options.timeout,\n        ...options.customProperties,\n    };\n    console.debug(authOptions);\n    if (ongoingAuth != null)\n        ongoingAuth.abort('Cancel ongoing authentication');\n    ongoingAuth = new AbortController();\n    const raw = await navigator.credentials.get({\n        publicKey: authOptions,\n        mediation: options.autocomplete ? 'conditional' : undefined,\n        signal: ongoingAuth?.signal\n    });\n    if (raw.type != \"public-key\")\n        throw \"Unexpected credential type!\";\n    ongoingAuth = null;\n    console.debug(raw);\n    const response = raw.response;\n    // This should provide the same as `response.toJson()` which is sadly only available on FireFox\n    const json = {\n        clientExtensionResults: raw.getClientExtensionResults(),\n        id: raw.id,\n        rawId: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(raw.rawId),\n        type: raw.type,\n        authenticatorAttachment: raw.authenticatorAttachment,\n        response: {\n            authenticatorData: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.authenticatorData),\n            clientDataJSON: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.clientDataJSON),\n            signature: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.signature),\n            userHandle: response.userHandle ? _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.userHandle) : undefined\n        }\n    };\n    return json;\n}\nfunction toPublicKeyCredentialDescriptor(cred) {\n    if (typeof cred === 'string') {\n        return {\n            id: _utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBase64url(cred),\n            type: 'public-key'\n        };\n    }\n    else {\n        return {\n            id: _utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBase64url(cred.id),\n            type: 'public-key',\n            transports: cred.transports\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authenticatorMetadata: () => (/* reexport safe */ _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_4__.authenticatorMetadata),\n/* harmony export */   client: () => (/* reexport module object */ _client_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   parsers: () => (/* reexport module object */ _parsers_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   server: () => (/* reexport module object */ _server_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   utils: () => (/* reexport module object */ _utils_js__WEBPACK_IMPORTED_MODULE_3__)\n/* harmony export */ });\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/client.js\");\n/* harmony import */ var _server_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./server.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/server.js\");\n/* harmony import */ var _parsers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parsers.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\");\n/* harmony import */ var _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./authenticatorMetadata.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js\");\n\n\n\n\n\n\nconst webauthn = { client: _client_js__WEBPACK_IMPORTED_MODULE_0__, server: _server_js__WEBPACK_IMPORTED_MODULE_1__, parsers: _parsers_js__WEBPACK_IMPORTED_MODULE_2__, utils: _utils_js__WEBPACK_IMPORTED_MODULE_3__, authenticatorMetadata: _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_4__.authenticatorMetadata };\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (webauthn);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBhc3N3b3JkbGVzcy1pZC93ZWJhdXRobi9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzQztBQUNBO0FBQ0U7QUFDSjtBQUMrQjtBQUNGO0FBQ2pFLG1CQUFtQixNQUFNLGlEQUFRLGtEQUFTLGlEQUFPLCtEQUF1QjtBQUN4RSxpRUFBZSxRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYW5pbG8vRGV2ZWxvcGVyL0VOVi9CbG9ja2NoYWluL3dlYjNwcm9qZWN0cy93ZWIzY2Yvd2ViM2NmYXBwL25vZGVfbW9kdWxlcy9AcGFzc3dvcmRsZXNzLWlkL3dlYmF1dGhuL2Rpc3QvZXNtL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNsaWVudCBmcm9tICcuL2NsaWVudC5qcyc7XG5pbXBvcnQgKiBhcyBzZXJ2ZXIgZnJvbSAnLi9zZXJ2ZXIuanMnO1xuaW1wb3J0ICogYXMgcGFyc2VycyBmcm9tICcuL3BhcnNlcnMuanMnO1xuaW1wb3J0ICogYXMgdXRpbHMgZnJvbSAnLi91dGlscy5qcyc7XG5pbXBvcnQgeyBhdXRoZW50aWNhdG9yTWV0YWRhdGEgfSBmcm9tICcuL2F1dGhlbnRpY2F0b3JNZXRhZGF0YS5qcyc7XG5leHBvcnQgeyBjbGllbnQsIHNlcnZlciwgcGFyc2VycywgdXRpbHMsIGF1dGhlbnRpY2F0b3JNZXRhZGF0YSB9O1xuY29uc3Qgd2ViYXV0aG4gPSB7IGNsaWVudCwgc2VydmVyLCBwYXJzZXJzLCB1dGlscywgYXV0aGVudGljYXRvck1ldGFkYXRhIH07XG5leHBvcnQgZGVmYXVsdCB3ZWJhdXRobjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js":
/*!********************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAlgoName: () => (/* binding */ getAlgoName),\n/* harmony export */   parseAuthentication: () => (/* binding */ parseAuthentication),\n/* harmony export */   parseAuthenticator: () => (/* binding */ parseAuthenticator),\n/* harmony export */   parseClient: () => (/* binding */ parseClient),\n/* harmony export */   parseRegistration: () => (/* binding */ parseRegistration),\n/* harmony export */   toAuthenticationInfo: () => (/* binding */ toAuthenticationInfo),\n/* harmony export */   toRegistrationInfo: () => (/* binding */ toRegistrationInfo)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\");\n/* harmony import */ var _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./authenticatorMetadata.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js\");\n\n\nconst utf8Decoder = new TextDecoder('utf-8');\nfunction parseClient(data) {\n    if (typeof data == 'string')\n        data = _utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBase64url(data);\n    return JSON.parse(utf8Decoder.decode(data));\n}\nfunction parseAuthenticator(authData) {\n    if (typeof authData == 'string')\n        authData = _utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBase64url(authData);\n    //console.debug(authData)\n    let flags = new DataView(authData.slice(32, 33)).getUint8(0);\n    //console.debug(flags)\n    // https://w3c.github.io/webauthn/#sctn-authenticator-data\n    return {\n        rpIdHash: extractRpIdHash(authData),\n        flags: {\n            userPresent: !!(flags & 1),\n            //reserved1: !!(flags & 2),\n            userVerified: !!(flags & 4),\n            backupEligibility: !!(flags & 8),\n            backupState: !!(flags & 16),\n            //reserved2: !!(flags & 32),\n            attestedData: !!(flags & 64),\n            extensionsIncluded: !!(flags & 128)\n        },\n        signCount: new DataView(authData.slice(33, 37)).getUint32(0, false), // Big-Endian!\n        aaguid: extractAaguid(authData),\n        //credentialId: extractCredentialId() \n    };\n}\nfunction extractRpIdHash(authData) {\n    return _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(authData.slice(0, 32));\n}\n/**\n * Returns the AAGUID in the format \"00000000-0000-0000-0000-000000000000\"\n */\nfunction extractAaguid(authData) {\n    if (authData.byteLength < 53)\n        return \"00000000-0000-0000-0000-000000000000\";\n    const buffer = authData.slice(37, 53); // 16 byte\n    const hex = _utils_js__WEBPACK_IMPORTED_MODULE_0__.bufferToHex(buffer);\n    const aaguid = `${hex.substring(0, 8)}-${hex.substring(8, 12)}-${hex.substring(12, 16)}-${hex.substring(16, 20)}-${hex.substring(20, 32)}`;\n    return aaguid; // example: \"d41f5a69-b817-4144-a13c-9ebd6d9254d6\"\n}\nfunction getAlgoName(num) {\n    switch (num) {\n        case -7: return \"ES256\";\n        case -8: return \"EdDSA\";\n        case -257: return \"RS256\";\n        default: throw new Error(`Unknown algorithm code: ${num}`);\n    }\n}\nfunction parseRegistration(registrationJson) {\n    const authenticator = parseAuthenticator(registrationJson.response.authenticatorData);\n    return toRegistrationInfo(registrationJson, authenticator);\n}\nfunction toRegistrationInfo(registrationJson, authenticator) {\n    const aaguid = authenticator.aaguid;\n    return {\n        authenticator: {\n            aaguid,\n            counter: authenticator.signCount,\n            icon_light: 'https://webauthn.passwordless.id/authenticators/' + aaguid + '-light.png',\n            icon_dark: 'https://webauthn.passwordless.id/authenticators/' + aaguid + '-dark.png',\n            name: _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_1__.authenticatorMetadata[aaguid] ?? 'Unknown',\n        },\n        credential: {\n            id: registrationJson.id,\n            publicKey: registrationJson.response.publicKey,\n            algorithm: getAlgoName(registrationJson.response.publicKeyAlgorithm),\n            transports: registrationJson.response.transports\n        },\n        synced: authenticator.flags.backupEligibility,\n        user: registrationJson.user, // That's specific to this library\n        userVerified: authenticator.flags.userVerified,\n    };\n}\nfunction toAuthenticationInfo(authenticationJson, authenticator) {\n    return {\n        credentialId: authenticationJson.id,\n        userId: authenticationJson.response.userHandle,\n        counter: authenticator.signCount,\n        userVerified: authenticator.flags.userVerified,\n        authenticatorAttachment: authenticationJson.authenticatorAttachment\n    };\n}\nfunction parseAuthentication(authenticationJson) {\n    const authenticator = parseAuthenticator(authenticationJson.response.authenticatorData);\n    return toAuthenticationInfo(authenticationJson, authenticator);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBhc3N3b3JkbGVzcy1pZC93ZWJhdXRobi9kaXN0L2VzbS9wYXJzZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFvQztBQUMrQjtBQUNuRTtBQUNPO0FBQ1A7QUFDQSxlQUFlLHFEQUFvQjtBQUNuQztBQUNBO0FBQ087QUFDUDtBQUNBLG1CQUFtQixxREFBb0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsa0RBQWlCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDLGdCQUFnQixrREFBaUI7QUFDakMsc0JBQXNCLG9CQUFvQixHQUFHLHFCQUFxQixHQUFHLHNCQUFzQixHQUFHLHNCQUFzQixHQUFHLHNCQUFzQjtBQUM3SSxtQkFBbUI7QUFDbkI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELElBQUk7QUFDaEU7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw0RUFBcUI7QUFDdkMsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZGFuaWxvL0RldmVsb3Blci9FTlYvQmxvY2tjaGFpbi93ZWIzcHJvamVjdHMvd2ViM2NmL3dlYjNjZmFwcC9ub2RlX21vZHVsZXMvQHBhc3N3b3JkbGVzcy1pZC93ZWJhdXRobi9kaXN0L2VzbS9wYXJzZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHV0aWxzIGZyb20gJy4vdXRpbHMuanMnO1xuaW1wb3J0IHsgYXV0aGVudGljYXRvck1ldGFkYXRhIH0gZnJvbSAnLi9hdXRoZW50aWNhdG9yTWV0YWRhdGEuanMnO1xuY29uc3QgdXRmOERlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoJ3V0Zi04Jyk7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDbGllbnQoZGF0YSkge1xuICAgIGlmICh0eXBlb2YgZGF0YSA9PSAnc3RyaW5nJylcbiAgICAgICAgZGF0YSA9IHV0aWxzLnBhcnNlQmFzZTY0dXJsKGRhdGEpO1xuICAgIHJldHVybiBKU09OLnBhcnNlKHV0ZjhEZWNvZGVyLmRlY29kZShkYXRhKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VBdXRoZW50aWNhdG9yKGF1dGhEYXRhKSB7XG4gICAgaWYgKHR5cGVvZiBhdXRoRGF0YSA9PSAnc3RyaW5nJylcbiAgICAgICAgYXV0aERhdGEgPSB1dGlscy5wYXJzZUJhc2U2NHVybChhdXRoRGF0YSk7XG4gICAgLy9jb25zb2xlLmRlYnVnKGF1dGhEYXRhKVxuICAgIGxldCBmbGFncyA9IG5ldyBEYXRhVmlldyhhdXRoRGF0YS5zbGljZSgzMiwgMzMpKS5nZXRVaW50OCgwKTtcbiAgICAvL2NvbnNvbGUuZGVidWcoZmxhZ3MpXG4gICAgLy8gaHR0cHM6Ly93M2MuZ2l0aHViLmlvL3dlYmF1dGhuLyNzY3RuLWF1dGhlbnRpY2F0b3ItZGF0YVxuICAgIHJldHVybiB7XG4gICAgICAgIHJwSWRIYXNoOiBleHRyYWN0UnBJZEhhc2goYXV0aERhdGEpLFxuICAgICAgICBmbGFnczoge1xuICAgICAgICAgICAgdXNlclByZXNlbnQ6ICEhKGZsYWdzICYgMSksXG4gICAgICAgICAgICAvL3Jlc2VydmVkMTogISEoZmxhZ3MgJiAyKSxcbiAgICAgICAgICAgIHVzZXJWZXJpZmllZDogISEoZmxhZ3MgJiA0KSxcbiAgICAgICAgICAgIGJhY2t1cEVsaWdpYmlsaXR5OiAhIShmbGFncyAmIDgpLFxuICAgICAgICAgICAgYmFja3VwU3RhdGU6ICEhKGZsYWdzICYgMTYpLFxuICAgICAgICAgICAgLy9yZXNlcnZlZDI6ICEhKGZsYWdzICYgMzIpLFxuICAgICAgICAgICAgYXR0ZXN0ZWREYXRhOiAhIShmbGFncyAmIDY0KSxcbiAgICAgICAgICAgIGV4dGVuc2lvbnNJbmNsdWRlZDogISEoZmxhZ3MgJiAxMjgpXG4gICAgICAgIH0sXG4gICAgICAgIHNpZ25Db3VudDogbmV3IERhdGFWaWV3KGF1dGhEYXRhLnNsaWNlKDMzLCAzNykpLmdldFVpbnQzMigwLCBmYWxzZSksIC8vIEJpZy1FbmRpYW4hXG4gICAgICAgIGFhZ3VpZDogZXh0cmFjdEFhZ3VpZChhdXRoRGF0YSksXG4gICAgICAgIC8vY3JlZGVudGlhbElkOiBleHRyYWN0Q3JlZGVudGlhbElkKCkgXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGV4dHJhY3RScElkSGFzaChhdXRoRGF0YSkge1xuICAgIHJldHVybiB1dGlscy50b0Jhc2U2NHVybChhdXRoRGF0YS5zbGljZSgwLCAzMikpO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBBQUdVSUQgaW4gdGhlIGZvcm1hdCBcIjAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMFwiXG4gKi9cbmZ1bmN0aW9uIGV4dHJhY3RBYWd1aWQoYXV0aERhdGEpIHtcbiAgICBpZiAoYXV0aERhdGEuYnl0ZUxlbmd0aCA8IDUzKVxuICAgICAgICByZXR1cm4gXCIwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDBcIjtcbiAgICBjb25zdCBidWZmZXIgPSBhdXRoRGF0YS5zbGljZSgzNywgNTMpOyAvLyAxNiBieXRlXG4gICAgY29uc3QgaGV4ID0gdXRpbHMuYnVmZmVyVG9IZXgoYnVmZmVyKTtcbiAgICBjb25zdCBhYWd1aWQgPSBgJHtoZXguc3Vic3RyaW5nKDAsIDgpfS0ke2hleC5zdWJzdHJpbmcoOCwgMTIpfS0ke2hleC5zdWJzdHJpbmcoMTIsIDE2KX0tJHtoZXguc3Vic3RyaW5nKDE2LCAyMCl9LSR7aGV4LnN1YnN0cmluZygyMCwgMzIpfWA7XG4gICAgcmV0dXJuIGFhZ3VpZDsgLy8gZXhhbXBsZTogXCJkNDFmNWE2OS1iODE3LTQxNDQtYTEzYy05ZWJkNmQ5MjU0ZDZcIlxufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEFsZ29OYW1lKG51bSkge1xuICAgIHN3aXRjaCAobnVtKSB7XG4gICAgICAgIGNhc2UgLTc6IHJldHVybiBcIkVTMjU2XCI7XG4gICAgICAgIGNhc2UgLTg6IHJldHVybiBcIkVkRFNBXCI7XG4gICAgICAgIGNhc2UgLTI1NzogcmV0dXJuIFwiUlMyNTZcIjtcbiAgICAgICAgZGVmYXVsdDogdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGFsZ29yaXRobSBjb2RlOiAke251bX1gKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VSZWdpc3RyYXRpb24ocmVnaXN0cmF0aW9uSnNvbikge1xuICAgIGNvbnN0IGF1dGhlbnRpY2F0b3IgPSBwYXJzZUF1dGhlbnRpY2F0b3IocmVnaXN0cmF0aW9uSnNvbi5yZXNwb25zZS5hdXRoZW50aWNhdG9yRGF0YSk7XG4gICAgcmV0dXJuIHRvUmVnaXN0cmF0aW9uSW5mbyhyZWdpc3RyYXRpb25Kc29uLCBhdXRoZW50aWNhdG9yKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b1JlZ2lzdHJhdGlvbkluZm8ocmVnaXN0cmF0aW9uSnNvbiwgYXV0aGVudGljYXRvcikge1xuICAgIGNvbnN0IGFhZ3VpZCA9IGF1dGhlbnRpY2F0b3IuYWFndWlkO1xuICAgIHJldHVybiB7XG4gICAgICAgIGF1dGhlbnRpY2F0b3I6IHtcbiAgICAgICAgICAgIGFhZ3VpZCxcbiAgICAgICAgICAgIGNvdW50ZXI6IGF1dGhlbnRpY2F0b3Iuc2lnbkNvdW50LFxuICAgICAgICAgICAgaWNvbl9saWdodDogJ2h0dHBzOi8vd2ViYXV0aG4ucGFzc3dvcmRsZXNzLmlkL2F1dGhlbnRpY2F0b3JzLycgKyBhYWd1aWQgKyAnLWxpZ2h0LnBuZycsXG4gICAgICAgICAgICBpY29uX2Rhcms6ICdodHRwczovL3dlYmF1dGhuLnBhc3N3b3JkbGVzcy5pZC9hdXRoZW50aWNhdG9ycy8nICsgYWFndWlkICsgJy1kYXJrLnBuZycsXG4gICAgICAgICAgICBuYW1lOiBhdXRoZW50aWNhdG9yTWV0YWRhdGFbYWFndWlkXSA/PyAnVW5rbm93bicsXG4gICAgICAgIH0sXG4gICAgICAgIGNyZWRlbnRpYWw6IHtcbiAgICAgICAgICAgIGlkOiByZWdpc3RyYXRpb25Kc29uLmlkLFxuICAgICAgICAgICAgcHVibGljS2V5OiByZWdpc3RyYXRpb25Kc29uLnJlc3BvbnNlLnB1YmxpY0tleSxcbiAgICAgICAgICAgIGFsZ29yaXRobTogZ2V0QWxnb05hbWUocmVnaXN0cmF0aW9uSnNvbi5yZXNwb25zZS5wdWJsaWNLZXlBbGdvcml0aG0pLFxuICAgICAgICAgICAgdHJhbnNwb3J0czogcmVnaXN0cmF0aW9uSnNvbi5yZXNwb25zZS50cmFuc3BvcnRzXG4gICAgICAgIH0sXG4gICAgICAgIHN5bmNlZDogYXV0aGVudGljYXRvci5mbGFncy5iYWNrdXBFbGlnaWJpbGl0eSxcbiAgICAgICAgdXNlcjogcmVnaXN0cmF0aW9uSnNvbi51c2VyLCAvLyBUaGF0J3Mgc3BlY2lmaWMgdG8gdGhpcyBsaWJyYXJ5XG4gICAgICAgIHVzZXJWZXJpZmllZDogYXV0aGVudGljYXRvci5mbGFncy51c2VyVmVyaWZpZWQsXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b0F1dGhlbnRpY2F0aW9uSW5mbyhhdXRoZW50aWNhdGlvbkpzb24sIGF1dGhlbnRpY2F0b3IpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBjcmVkZW50aWFsSWQ6IGF1dGhlbnRpY2F0aW9uSnNvbi5pZCxcbiAgICAgICAgdXNlcklkOiBhdXRoZW50aWNhdGlvbkpzb24ucmVzcG9uc2UudXNlckhhbmRsZSxcbiAgICAgICAgY291bnRlcjogYXV0aGVudGljYXRvci5zaWduQ291bnQsXG4gICAgICAgIHVzZXJWZXJpZmllZDogYXV0aGVudGljYXRvci5mbGFncy51c2VyVmVyaWZpZWQsXG4gICAgICAgIGF1dGhlbnRpY2F0b3JBdHRhY2htZW50OiBhdXRoZW50aWNhdGlvbkpzb24uYXV0aGVudGljYXRvckF0dGFjaG1lbnRcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQXV0aGVudGljYXRpb24oYXV0aGVudGljYXRpb25Kc29uKSB7XG4gICAgY29uc3QgYXV0aGVudGljYXRvciA9IHBhcnNlQXV0aGVudGljYXRvcihhdXRoZW50aWNhdGlvbkpzb24ucmVzcG9uc2UuYXV0aGVudGljYXRvckRhdGEpO1xuICAgIHJldHVybiB0b0F1dGhlbnRpY2F0aW9uSW5mbyhhdXRoZW50aWNhdGlvbkpzb24sIGF1dGhlbnRpY2F0b3IpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/server.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/server.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseCryptoKey: () => (/* binding */ parseCryptoKey),\n/* harmony export */   randomChallenge: () => (/* binding */ randomChallenge),\n/* harmony export */   verifyAuthentication: () => (/* binding */ verifyAuthentication),\n/* harmony export */   verifyRegistration: () => (/* binding */ verifyRegistration),\n/* harmony export */   verifySignature: () => (/* binding */ verifySignature)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/index.js\");\n/* harmony import */ var _parsers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parsers.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\");\n\n\n\nfunction randomChallenge() {\n    const buffer = crypto.getRandomValues(new Uint8Array(18)); // > 128 bits, a multiple of 3 bytes to have base64 encoding without padding\n    return _utils_js__WEBPACK_IMPORTED_MODULE_2__.toBase64url(buffer);\n}\nasync function isValid(validator, value) {\n    if (typeof validator === 'function') {\n        const res = validator(value);\n        if (res instanceof Promise)\n            return await res;\n        else\n            return res;\n    }\n    // the validator can be a single value too\n    return validator === value;\n}\nasync function isNotValid(validator, value) {\n    return !(await isValid(validator, value));\n}\nasync function verifyRegistration(registrationJson, expected) {\n    const client = (0,_parsers_js__WEBPACK_IMPORTED_MODULE_1__.parseClient)(registrationJson.response.clientDataJSON);\n    const authenticator = (0,_parsers_js__WEBPACK_IMPORTED_MODULE_1__.parseAuthenticator)(registrationJson.response.authenticatorData);\n    const aaguid = authenticator.aaguid;\n    if (!aaguid) // should never happen, worst case should be a fallback to \"zeroed\" aaguid\n        throw new Error(\"Unexpected error, no AAGUID.\");\n    if (client.type !== \"webauthn.create\")\n        throw new Error(`Unexpected ClientData type: ${client.type}`);\n    if (await isNotValid(expected.origin, client.origin))\n        throw new Error(`Unexpected ClientData origin: ${client.origin}`);\n    if (await isNotValid(expected.challenge, client.challenge))\n        throw new Error(`Unexpected ClientData challenge: ${client.challenge}`);\n    return _index_js__WEBPACK_IMPORTED_MODULE_0__.parsers.toRegistrationInfo(registrationJson, authenticator);\n}\nasync function verifyAuthentication(authenticationJson, credential, expected) {\n    if (authenticationJson.id !== credential.id)\n        throw new Error(`Credential ID mismatch: ${authenticationJson.id} vs ${credential.id}`);\n    const isValidSignature = await verifySignature({\n        algorithm: credential.algorithm,\n        publicKey: credential.publicKey,\n        authenticatorData: authenticationJson.response.authenticatorData,\n        clientData: authenticationJson.response.clientDataJSON,\n        signature: authenticationJson.response.signature,\n        verbose: expected.verbose\n    });\n    if (!isValidSignature)\n        throw new Error(`Invalid signature: ${authenticationJson.response.signature}`);\n    const client = (0,_parsers_js__WEBPACK_IMPORTED_MODULE_1__.parseClient)(authenticationJson.response.clientDataJSON);\n    const authenticator = (0,_parsers_js__WEBPACK_IMPORTED_MODULE_1__.parseAuthenticator)(authenticationJson.response.authenticatorData);\n    if (expected.verbose) {\n        console.debug(client);\n        console.debug(authenticator);\n    }\n    if (client.type !== \"webauthn.get\")\n        throw new Error(`Unexpected clientData type: ${client.type}`);\n    if (await isNotValid(expected.origin, client.origin))\n        throw new Error(`Unexpected ClientData origin: ${client.origin}`);\n    if (await isNotValid(expected.challenge, client.challenge))\n        throw new Error(`Unexpected ClientData challenge: ${client.challenge}`);\n    // this only works because we consider `rp.origin` and `rp.id` to be the same during authentication/registration\n    const rpId = expected.domain ?? new URL(client.origin).hostname;\n    const expectedRpIdHash = _utils_js__WEBPACK_IMPORTED_MODULE_2__.toBase64url(await _utils_js__WEBPACK_IMPORTED_MODULE_2__.sha256(_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBuffer(rpId)));\n    if (authenticator.rpIdHash !== expectedRpIdHash)\n        throw new Error(`Unexpected RpIdHash: ${authenticator.rpIdHash} vs ${expectedRpIdHash}`);\n    if (!authenticator.flags.userPresent)\n        throw new Error(`Unexpected authenticator flags: missing userPresent`);\n    if (!authenticator.flags.userVerified && expected.userVerified)\n        throw new Error(`Unexpected authenticator flags: missing userVerified`);\n    if (expected.counter && authenticator.signCount <= expected.counter)\n        throw new Error(`Unexpected authenticator counter: ${authenticator.signCount} (should be > ${expected.counter})`);\n    return (0,_parsers_js__WEBPACK_IMPORTED_MODULE_1__.toAuthenticationInfo)(authenticationJson, authenticator);\n}\n// https://w3c.github.io/webauthn/#sctn-public-key-easy\n// https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n/*\nUser agents MUST be able to return a non-null value for getPublicKey() when the credential public key has a COSEAlgorithmIdentifier value of:\n\n-7 (ES256), where kty is 2 (with uncompressed points) and crv is 1 (P-256).\n\n-257 (RS256).\n\n-8 (EdDSA), where crv is 6 (Ed25519).\n*/\nfunction getAlgoParams(algorithm) {\n    switch (algorithm) {\n        case 'RS256':\n            return {\n                name: 'RSASSA-PKCS1-v1_5',\n                hash: 'SHA-256'\n            };\n        case 'ES256':\n            return {\n                name: 'ECDSA',\n                namedCurve: 'P-256',\n                hash: 'SHA-256',\n            };\n        // case 'EdDSA': Not supported by browsers\n        default:\n            throw new Error(`Unknown or unsupported crypto algorithm: ${algorithm}. Only 'RS256' and 'ES256' are supported.`);\n    }\n}\nasync function parseCryptoKey(algorithm, publicKey) {\n    const algoParams = getAlgoParams(algorithm);\n    const buffer = _utils_js__WEBPACK_IMPORTED_MODULE_2__.parseBase64url(publicKey);\n    return crypto.subtle.importKey('spki', buffer, algoParams, false, ['verify']);\n}\n// https://w3c.github.io/webauthn/#sctn-verifying-assertion\n// https://w3c.github.io/webauthn/#sctn-signature-attestation-types\n/* Emphasis mine:\n\n6.5.6. Signature Formats for Packed Attestation, FIDO U2F Attestation, and **Assertion Signatures**\n\n[...] For COSEAlgorithmIdentifier -7 (ES256) [...] the sig value MUST be encoded as an ASN.1 [...]\n[...] For COSEAlgorithmIdentifier -257 (RS256) [...] The signature is not ASN.1 wrapped.\n[...] For COSEAlgorithmIdentifier -37 (PS256) [...] The signature is not ASN.1 wrapped.\n*/\n// see also https://gist.github.com/philholden/50120652bfe0498958fd5926694ba354\nasync function verifySignature({ algorithm, publicKey, authenticatorData, clientData, signature, verbose }) {\n    let cryptoKey = await parseCryptoKey(algorithm, publicKey);\n    if (verbose) {\n        console.debug(cryptoKey);\n    }\n    let clientHash = await _utils_js__WEBPACK_IMPORTED_MODULE_2__.sha256(_utils_js__WEBPACK_IMPORTED_MODULE_2__.parseBase64url(clientData));\n    // during \"login\", the authenticatorData is exactly 37 bytes\n    let comboBuffer = _utils_js__WEBPACK_IMPORTED_MODULE_2__.concatenateBuffers(_utils_js__WEBPACK_IMPORTED_MODULE_2__.parseBase64url(authenticatorData), clientHash);\n    if (verbose) {\n        console.debug('Algorithm: ' + algorithm);\n        console.debug('Public key: ' + publicKey);\n        console.debug('Data: ' + _utils_js__WEBPACK_IMPORTED_MODULE_2__.toBase64url(comboBuffer));\n        console.debug('Signature: ' + signature);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/verify\n    let signatureBuffer = _utils_js__WEBPACK_IMPORTED_MODULE_2__.parseBase64url(signature);\n    if (algorithm == 'ES256')\n        signatureBuffer = convertASN1toRaw(signatureBuffer);\n    const algoParams = getAlgoParams(algorithm);\n    const isValid = await crypto.subtle.verify(algoParams, cryptoKey, signatureBuffer, comboBuffer);\n    return isValid;\n}\nfunction convertASN1toRaw(signatureBuffer) {\n    // Convert signature from ASN.1 sequence to \"raw\" format\n    const signature = new Uint8Array(signatureBuffer);\n    const rStart = signature[4] === 0 ? 5 : 4;\n    const rEnd = rStart + 32;\n    const sStart = signature[rEnd + 2] === 0 ? rEnd + 3 : rEnd + 2;\n    const r = signature.slice(rStart, rEnd);\n    const s = signature.slice(sStart);\n    return new Uint8Array([...r, ...s]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/server.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bufferToHex: () => (/* binding */ bufferToHex),\n/* harmony export */   concatenateBuffers: () => (/* binding */ concatenateBuffers),\n/* harmony export */   isBase64url: () => (/* binding */ isBase64url),\n/* harmony export */   parseBase64url: () => (/* binding */ parseBase64url),\n/* harmony export */   parseBuffer: () => (/* binding */ parseBuffer),\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   toBase64url: () => (/* binding */ toBase64url),\n/* harmony export */   toBuffer: () => (/* binding */ toBuffer)\n/* harmony export */ });\n/********************************\n     Encoding/Decoding Utils\n********************************/\nfunction toBuffer(txt) {\n    return Uint8Array.from(txt, c => c.charCodeAt(0)).buffer;\n}\nfunction parseBuffer(buffer) {\n    return String.fromCharCode(...new Uint8Array(buffer));\n}\nfunction isBase64url(txt) {\n    return txt.match(/^[a-zA-Z0-9\\-_]+=*$/) !== null;\n}\nfunction toBase64url(buffer) {\n    const txt = btoa(parseBuffer(buffer)); // base64\n    return txt.replaceAll('+', '-').replaceAll('/', '_');\n}\nfunction parseBase64url(txt) {\n    txt = txt.replaceAll('-', '+').replaceAll('_', '/'); // base64url -> base64\n    return toBuffer(atob(txt));\n}\nasync function sha256(buffer) {\n    return await crypto.subtle.digest('SHA-256', buffer);\n}\nfunction bufferToHex(buffer) {\n    return [...new Uint8Array(buffer)]\n        .map(b => b.toString(16).padStart(2, \"0\"))\n        .join(\"\");\n}\nfunction concatenateBuffers(buffer1, buffer2) {\n    var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n    tmp.set(new Uint8Array(buffer1), 0);\n    tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n    return tmp;\n}\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHBhc3N3b3JkbGVzcy1pZC93ZWJhdXRobi9kaXN0L2VzbS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1AsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDTztBQUNQLHlEQUF5RDtBQUN6RDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZGFuaWxvL0RldmVsb3Blci9FTlYvQmxvY2tjaGFpbi93ZWIzcHJvamVjdHMvd2ViM2NmL3dlYjNjZmFwcC9ub2RlX21vZHVsZXMvQHBhc3N3b3JkbGVzcy1pZC93ZWJhdXRobi9kaXN0L2VzbS91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgICAgRW5jb2RpbmcvRGVjb2RpbmcgVXRpbHNcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvQnVmZmVyKHR4dCkge1xuICAgIHJldHVybiBVaW50OEFycmF5LmZyb20odHh0LCBjID0+IGMuY2hhckNvZGVBdCgwKSkuYnVmZmVyO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQnVmZmVyKGJ1ZmZlcikge1xuICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKC4uLm5ldyBVaW50OEFycmF5KGJ1ZmZlcikpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQmFzZTY0dXJsKHR4dCkge1xuICAgIHJldHVybiB0eHQubWF0Y2goL15bYS16QS1aMC05XFwtX10rPSokLykgIT09IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9CYXNlNjR1cmwoYnVmZmVyKSB7XG4gICAgY29uc3QgdHh0ID0gYnRvYShwYXJzZUJ1ZmZlcihidWZmZXIpKTsgLy8gYmFzZTY0XG4gICAgcmV0dXJuIHR4dC5yZXBsYWNlQWxsKCcrJywgJy0nKS5yZXBsYWNlQWxsKCcvJywgJ18nKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUJhc2U2NHVybCh0eHQpIHtcbiAgICB0eHQgPSB0eHQucmVwbGFjZUFsbCgnLScsICcrJykucmVwbGFjZUFsbCgnXycsICcvJyk7IC8vIGJhc2U2NHVybCAtPiBiYXNlNjRcbiAgICByZXR1cm4gdG9CdWZmZXIoYXRvYih0eHQpKTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaGEyNTYoYnVmZmVyKSB7XG4gICAgcmV0dXJuIGF3YWl0IGNyeXB0by5zdWJ0bGUuZGlnZXN0KCdTSEEtMjU2JywgYnVmZmVyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBidWZmZXJUb0hleChidWZmZXIpIHtcbiAgICByZXR1cm4gWy4uLm5ldyBVaW50OEFycmF5KGJ1ZmZlcildXG4gICAgICAgIC5tYXAoYiA9PiBiLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCBcIjBcIikpXG4gICAgICAgIC5qb2luKFwiXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbmNhdGVuYXRlQnVmZmVycyhidWZmZXIxLCBidWZmZXIyKSB7XG4gICAgdmFyIHRtcCA9IG5ldyBVaW50OEFycmF5KGJ1ZmZlcjEuYnl0ZUxlbmd0aCArIGJ1ZmZlcjIuYnl0ZUxlbmd0aCk7XG4gICAgdG1wLnNldChuZXcgVWludDhBcnJheShidWZmZXIxKSwgMCk7XG4gICAgdG1wLnNldChuZXcgVWludDhBcnJheShidWZmZXIyKSwgYnVmZmVyMS5ieXRlTGVuZ3RoKTtcbiAgICByZXR1cm4gdG1wO1xufVxuO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\n");

/***/ })

};
;